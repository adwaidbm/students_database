 LOG:  database system was shut down at 2024-01-18 16:44:14 CET
 LOG:  database system is ready to accept connections
[unknown] LOG:  connection received: host=[local]
[unknown] LOG:  connection received: host=[local]
postgres LOG:  connection authorized: user=postgres database=template1 application_name=psql
postgres LOG:  statement: 
[unknown] LOG:  connection received: host=[local]
postgres LOG:  connection authorized: user=postgres database=template1 application_name=psql
postgres LOG:  statement: 
[unknown] LOG:  connection received: host=[local]
postgres LOG:  connection authorized: user=postgres database=template1 application_name=psql
postgres LOG:  statement: 
[unknown] LOG:  connection received: host=127.0.0.1 port=35722
postgres LOG:  connection authorized: user=postgres database=postgres application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
postgres LOG:  statement: SELECT 'CREATE USER freecodecamp WITH CREATEDB' WHERE NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname='freecodecamp')
postgres LOG:  statement: CREATE USER freecodecamp WITH CREATEDB
 LOG:  received fast shutdown request
 LOG:  aborting any active transactions
 LOG:  background worker "logical replication launcher" (PID 586) exited with exit code 1
 LOG:  shutting down
 LOG:  database system is shut down
 LOG:  database system was shut down at 2024-07-07 12:06:04 CEST
 LOG:  database system is ready to accept connections
[unknown] LOG:  connection received: host=[local]
[unknown] LOG:  connection received: host=[local]
postgres LOG:  connection authorized: user=postgres database=template1 application_name=psql
postgres LOG:  statement: 
[unknown] LOG:  connection received: host=[local]
postgres LOG:  connection authorized: user=postgres database=template1 application_name=psql
postgres LOG:  statement: 
[unknown] LOG:  connection received: host=[local]
postgres LOG:  connection authorized: user=postgres database=template1 application_name=psql
postgres LOG:  statement: 
[unknown] LOG:  connection received: host=127.0.0.1 port=52962
postgres LOG:  connection authorized: user=postgres database=postgres application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
postgres LOG:  statement: SELECT 'CREATE USER freecodecamp WITH CREATEDB' WHERE NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname='freecodecamp')
[unknown] LOG:  connection received: host=127.0.0.1 port=51678
freecodecamp LOG:  connection authorized: user=freecodecamp database=postgres application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT d.datname as "Name",
	       pg_catalog.pg_get_userbyid(d.datdba) as "Owner",
	       pg_catalog.pg_encoding_to_char(d.encoding) as "Encoding",
	       d.datcollate as "Collate",
	       d.datctype as "Ctype",
	       pg_catalog.array_to_string(d.datacl, E'\n') AS "Access privileges"
	FROM pg_catalog.pg_database d
	ORDER BY 1;
freecodecamp ERROR:  syntax error at or near "create" at character 26
freecodecamp STATEMENT:  create database students
	create database students;
freecodecamp LOG:  statement: CREATE DATABASE students;
[unknown] LOG:  connection received: host=::1 port=37566
postgres LOG:  connection authorized: user=postgres database=postgres
postgres LOG:  statement: SELECT datname FROM pg_catalog.pg_database WHERE datname='students';
freecodecamp LOG:  statement: SELECT d.datname as "Name",
	       pg_catalog.pg_get_userbyid(d.datdba) as "Owner",
	       pg_catalog.pg_encoding_to_char(d.encoding) as "Encoding",
	       d.datcollate as "Collate",
	       d.datctype as "Ctype",
	       pg_catalog.array_to_string(d.datacl, E'\n') AS "Access privileges"
	FROM pg_catalog.pg_database d
	ORDER BY 1;
[unknown] LOG:  connection received: host=127.0.0.1 port=41928
freecodecamp LOG:  connection authorized: user=freecodecamp database=postgres application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
[unknown] LOG:  connection received: host=127.0.0.1 port=44650
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp ERROR:  syntax error at or near ";" at character 22
freecodecamp STATEMENT:  CREATE TABLE students;
freecodecamp ERROR:  syntax error at or near "(" at character 14
freecodecamp STATEMENT:  CREATE TABLE (students);
freecodecamp LOG:  statement: CREATE TABLE students();
[unknown] LOG:  connection received: host=::1 port=52880
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name='students'
freecodecamp LOG:  statement: CREATE table majors();
[unknown] LOG:  connection received: host=::1 port=50380
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name='majors'
freecodecamp LOG:  statement: create table courses();
[unknown] LOG:  connection received: host=::1 port=50456
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name='courses'
freecodecamp LOG:  statement: create table major_courses();
[unknown] LOG:  connection received: host=::1 port=37710
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name='majors_courses'
freecodecamp LOG:  statement: create table majors_courses();
[unknown] LOG:  connection received: host=::1 port=48572
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name='majors_courses'
freecodecamp LOG:  statement: SELECT d.datname as "Name",
	       pg_catalog.pg_get_userbyid(d.datdba) as "Owner",
	       pg_catalog.pg_encoding_to_char(d.encoding) as "Encoding",
	       d.datcollate as "Collate",
	       d.datctype as "Ctype",
	       pg_catalog.array_to_string(d.datacl, E'\n') AS "Access privileges"
	FROM pg_catalog.pg_database d
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT d.datname as "Name",
	       pg_catalog.pg_get_userbyid(d.datdba) as "Owner",
	       pg_catalog.pg_encoding_to_char(d.encoding) as "Encoding",
	       d.datcollate as "Collate",
	       d.datctype as "Ctype",
	       pg_catalog.array_to_string(d.datacl, E'\n') AS "Access privileges"
	FROM pg_catalog.pg_database d
	WHERE d.datname OPERATOR(pg_catalog.~) '^(students)$' COLLATE pg_catalog.default
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(students)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16386';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16386' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16386' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16386'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16386'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16386')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16386' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16386' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: SELECT n.nspname as "Schema",
	  c.relname as "Name",
	  CASE c.relkind WHEN 'r' THEN 'table' WHEN 'v' THEN 'view' WHEN 'm' THEN 'materialized view' WHEN 'i' THEN 'index' WHEN 'S' THEN 'sequence' WHEN 's' THEN 'special' WHEN 'f' THEN 'foreign table' WHEN 'p' THEN 'partitioned table' WHEN 'I' THEN 'partitioned index' END as "Type",
	  pg_catalog.pg_get_userbyid(c.relowner) as "Owner"
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relkind IN ('r','p','v','m','S','f','')
	      AND n.nspname <> 'pg_catalog'
	      AND n.nspname <> 'information_schema'
	      AND n.nspname !~ '^pg_toast'
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 1,2;
freecodecamp ERROR:  syntax error at or near "ld" at character 1
freecodecamp STATEMENT:  ld
	alter table students add column student_id serial primary key;
freecodecamp LOG:  statement: ALTER TABLE students ADD COLUMN student_id SERIAL PRIMARY KEY;
[unknown] LOG:  connection received: host=::1 port=38740
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT column_default FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema = 'public' AND table_name='students' AND column_name='student_id'
postgres LOG:  statement: SELECT c.table_name, c.column_name FROM information_schema.key_column_usage AS c LEFT JOIN information_schema.table_constraints AS t ON t.constraint_name = c.constraint_name WHERE t.constraint_type = 'PRIMARY KEY' AND t.table_name = 'students' AND c.column_name = 'student_id'
freecodecamp LOG:  statement: ALTER TABLE students ADD COLUMN first_name VARCHAR(50) NOT NULL;
[unknown] LOG:  connection received: host=::1 port=53758
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name, column_name FROM information_schema.columns WHERE table_schema = 'public' AND table_name='students' AND column_name='first_name' AND data_type='character varying' AND character_maximum_length=50 AND is_nullable='NO'
freecodecamp LOG:  statement: ALTER TABLE students ADD COLUMN last_name VARCHAR(50) NOT NULL;
[unknown] LOG:  connection received: host=::1 port=34146
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name, column_name FROM information_schema.columns WHERE table_schema = 'public' AND table_name='students' AND column_name='last_name' AND data_type='character varying' AND character_maximum_length=50 AND is_nullable='NO'
freecodecamp LOG:  statement: ALTER TABLE students ADD COLUMN major_id INT;
[unknown] LOG:  connection received: host=::1 port=51434
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name, column_name FROM information_schema.columns WHERE table_schema = 'public' AND table_name='students' AND column_name='major_id' AND data_type='integer'
freecodecamp LOG:  statement: ALTER TABLE students ADD COLUMN gpa NUMERIC(2,1);
[unknown] LOG:  connection received: host=::1 port=35108
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name, column_name FROM information_schema.columns WHERE table_schema = 'public' AND table_name='students' AND column_name='gpa' AND data_type='numeric' AND numeric_precision=2 AND numeric_scale=1
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(students)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16386';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16386' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16386' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16386' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16386'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16386'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16386')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16386' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16386' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: ALTER TABLE majors ADD COLUMN major_id SERIAL PRIMARY KEY;
[unknown] LOG:  connection received: host=::1 port=54274
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT column_default FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema = 'public' AND table_name='majors' AND column_name='major_id'
postgres LOG:  statement: SELECT c.table_name, c.column_name FROM information_schema.key_column_usage AS c LEFT JOIN information_schema.table_constraints AS t ON t.constraint_name = c.constraint_name WHERE t.constraint_type = 'PRIMARY KEY' AND t.table_name = 'majors' AND c.column_name = 'major_id'
freecodecamp LOG:  statement: ALTER TABLE majors ADD COLUMN major VARCHAR(50) NOT NULL;
[unknown] LOG:  connection received: host=::1 port=37500
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name, column_name FROM information_schema.columns WHERE table_schema = 'public' AND table_name='majors' AND column_name='major' AND data_type='character varying' AND character_maximum_length=50 AND is_nullable='NO'
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(majors)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16389';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16389' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16389' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16389' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16389'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16389'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16389')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16389' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16389' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: ALTER TABLE students ADD FOREIGN KEY (major_id) REFERENCES majors (major_id);
[unknown] LOG:  connection received: host=::1 port=45128
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT tc.table_name, kcu.column_name, ccu.table_name AS foreign_table_name, ccu.column_name AS foreign_column_name FROM information_schema.table_constraints tc JOIN information_schema.key_column_usage kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY'
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(students)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16386';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16386' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16386' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16386' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16386')
	                     UNION ALL VALUES ('16386'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16386' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16386'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16386'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16386')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16386' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16386' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16386' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: ALTER TABLE courses ADD COLUMN course_id SERIAL PRIMARY KEY;
[unknown] LOG:  connection received: host=::1 port=47180
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT column_name FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema = 'public' AND table_name='courses' AND column_name='course_id' AND data_type='integer'
postgres LOG:  statement: SELECT c.table_name, c.column_name FROM information_schema.key_column_usage AS c LEFT JOIN information_schema.table_constraints AS t ON t.constraint_name = c.constraint_name WHERE t.constraint_type='PRIMARY KEY' AND t.table_name='courses' AND c.column_name='course_id'
freecodecamp ERROR:  syntax error at or near "A" at character 1
freecodecamp STATEMENT:  A
	ALTER TABLE courses ADD COLUMN course VARCHAR(100) NOT NULL;
freecodecamp LOG:  statement: ALTER TABLE courses ADD COLUMN course VARCHAR(100) NOT NULL;
[unknown] LOG:  connection received: host=::1 port=48002
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT table_name, column_name FROM information_schema.columns WHERE table_schema = 'public' AND table_name='courses' AND column_name='course' AND data_type='character varying' AND character_maximum_length=100 AND is_nullable='NO'
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(courses)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16392';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16392' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16392' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16392' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16392'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16392'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16392')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16392' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16392' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: ALTER TABLE majors_courses ADD COLUMN major_id INT;
[unknown] LOG:  connection received: host=::1 port=52670
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT column_name FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema = 'public' AND table_name='majors_courses' AND column_name='major_id' AND data_type='integer'
freecodecamp ERROR:  syntax error at or near "F" at character 8
freecodecamp STATEMENT:  ALTER 
	F
	ALTER TABLE majors_courses ADD FOREIGN KEY (major_id) REFERENCES majors (major_id);
freecodecamp LOG:  statement: ALTER TABLE majors_courses ADD FOREIGN KEY (major_id) REFERENCES majors (major_id);
[unknown] LOG:  connection received: host=::1 port=42278
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT tc.table_name, kcu.column_name, ccu.table_name AS foreign_table_name, ccu.column_name AS foreign_column_name FROM information_schema.table_constraints tc JOIN information_schema.key_column_usage kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY'
freecodecamp LOG:  statement: ALTER TABLE majors_courses ADD COLUMN course_id INT;
[unknown] LOG:  connection received: host=::1 port=38220
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT column_name FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema = 'public' AND table_name='majors_courses' AND column_name='course_id' AND data_type='integer'
freecodecamp LOG:  statement: ALTER TABLE majors_courses ADD FOREIGN KEY (course_id) REFERENCES courses (course_id);
[unknown] LOG:  connection received: host=::1 port=42412
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT tc.table_name, kcu.column_name, ccu.table_name AS foreign_table_name, ccu.column_name AS foreign_column_name FROM information_schema.table_constraints tc JOIN information_schema.key_column_usage kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY'
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(majors_courses)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16398';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16398' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16398' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16398')
	                     UNION ALL VALUES ('16398'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16398' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16398'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16398'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16398')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16398' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16398' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16398' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: ALTER TABLE majors_courses ADD PRIMARY KEY (major_id, course_id);
[unknown] LOG:  connection received: host=::1 port=50820
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT c.table_name, c.column_name FROM information_schema.key_column_usage AS c LEFT JOIN information_schema.table_constraints AS t ON t.constraint_name = c.constraint_name WHERE t.constraint_type='PRIMARY KEY' AND t.table_name='majors_courses' AND c.column_name='major_id'
postgres LOG:  statement: SELECT c.table_name, c.column_name FROM information_schema.key_column_usage AS c LEFT JOIN information_schema.table_constraints AS t ON t.constraint_name = c.constraint_name WHERE t.constraint_type='PRIMARY KEY' AND t.table_name='majors_courses' AND c.column_name='course_id'
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(majors_courses)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16398';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16398' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16398' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16398' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16398')
	                     UNION ALL VALUES ('16398'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16398' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16398'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16398'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16398')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16398' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16398' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16398' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: SELECT n.nspname as "Schema",
	  c.relname as "Name",
	  CASE c.relkind WHEN 'r' THEN 'table' WHEN 'v' THEN 'view' WHEN 'm' THEN 'materialized view' WHEN 'i' THEN 'index' WHEN 'S' THEN 'sequence' WHEN 's' THEN 'special' WHEN 'f' THEN 'foreign table' WHEN 'p' THEN 'partitioned table' WHEN 'I' THEN 'partitioned index' END as "Type",
	  pg_catalog.pg_get_userbyid(c.relowner) as "Owner"
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relkind IN ('r','p','v','m','S','f','')
	      AND n.nspname <> 'pg_catalog'
	      AND n.nspname <> 'information_schema'
	      AND n.nspname !~ '^pg_toast'
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 1,2;
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(majors)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16389';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16389' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16389' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16389' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16389')
	                     UNION ALL VALUES ('16389'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16389' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16389'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16389'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16389')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16389' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16389' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16389' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES ('Database Administration');
[unknown] LOG:  connection received: host=::1 port=37272
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM majors WHERE major='Database Administration'
freecodecamp LOG:  statement: SELECT major FROM majors;
freecodecamp LOG:  statement: SELECT * FROM majors;
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(courses)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16392';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16392' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16392' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16392' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16392')
	                     UNION ALL VALUES ('16392'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16392' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16392'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16392'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16392')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16392' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16392' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16392' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
[unknown] LOG:  connection received: host=::1 port=56430
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM courses WHERE course='Data Structures and Algorithms'
freecodecamp ERROR:  syntax error at or near "VALUE" at character 29
freecodecamp STATEMENT:  INSERT INTO courses(course) VALUE ('Data Structures and Algorithms');
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUEs ('Data Structures and Algorithms');
[unknown] LOG:  connection received: host=::1 port=50126
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM courses WHERE course='Data Structures and Algorithms'
freecodecamp LOG:  statement: SELECT * FROM courses;
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(majors_courses)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16398';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16398' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16398' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16398' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16398')
	                     UNION ALL VALUES ('16398'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16398' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16398'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16398'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16398')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16398' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16398' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16398' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: SELECT * FROM majors_courses;
[unknown] LOG:  connection received: host=::1 port=44668
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM majors_courses
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES (1,1);
[unknown] LOG:  connection received: host=::1 port=36378
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM majors_courses
freecodecamp LOG:  statement: SELECT * FROM majors_courses;
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(students)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16386';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16386' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16386' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16386' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16386')
	                     UNION ALL VALUES ('16386'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16386' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16386'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16386'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16386')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16386' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16386' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16386' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: SELECT * FROM students;
[unknown] LOG:  connection received: host=::1 port=47708
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: SELECT * FROM majors;
[unknown] LOG:  connection received: host=::1 port=57906
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, majors_id, gpa) VALUES ('rhea', 'Kellens', 1, 2.5);
freecodecamp ERROR:  column "majors_id" of relation "students" does not exist at character 45
freecodecamp STATEMENT:  INSERT INTO students(first_name, last_name, majors_id, gpa) VALUES ('rhea', 'Kellens', 1, 2.5);
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(students)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16386';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16386' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16386' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16386' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16386')
	                     UNION ALL VALUES ('16386'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16386' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16386'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16386'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16386')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16386' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16386' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16386' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
[unknown] LOG:  connection received: host=::1 port=60880
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(majors)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16389';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16389' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16389' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16389' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16389')
	                     UNION ALL VALUES ('16389'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16389' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16389'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16389'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16389')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16389' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16389' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16389' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
[unknown] LOG:  connection received: host=::1 port=60372
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, majors_id, gpa) VALUES ('rhea', 'Kellens', 1, 2.5);
freecodecamp ERROR:  column "majors_id" of relation "students" does not exist at character 45
freecodecamp STATEMENT:  INSERT INTO students(first_name, last_name, majors_id, gpa) VALUES ('rhea', 'Kellens', 1, 2.5);
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES ('rhea', 'Kellens', 1, 2.5);
[unknown] LOG:  connection received: host=::1 port=41938
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
[unknown] LOG:  connection received: host=::1 port=45162
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: SELECT * FROM students;
[unknown] LOG:  connection received: host=::1 port=53236
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: DELETE FROM students WHERE first_name = 'rhea';
[unknown] LOG:  connection received: host=::1 port=38308
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: SELECT * FROM students;
[unknown] LOG:  connection received: host=::1 port=58232
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: INSERT INTO students(first_name, lastname, major_id, gpa) VALUES ('Rhea', 'Kellens', 1, 2.5);
freecodecamp ERROR:  column "lastname" of relation "students" does not exist at character 34
freecodecamp STATEMENT:  INSERT INTO students(first_name, lastname, major_id, gpa) VALUES ('Rhea', 'Kellens', 1, 2.5);
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES ('Rhea', 'Kellens', 1, 2.5);
[unknown] LOG:  connection received: host=::1 port=46418
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: DELETE FROM students WHERE first_name('Rhea');
freecodecamp ERROR:  function first_name(unknown) does not exist at character 28
freecodecamp HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
freecodecamp STATEMENT:  DELETE FROM students WHERE first_name('Rhea');
freecodecamp ERROR:  syntax error at or near "DELETE" at character 48
freecodecamp STATEMENT:  DELETE FROM students WHERE first_name = 'Rhea'
	DELETE FROM students WHERE first_name = 'Rhea';
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(students)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16386';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16386' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16386' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16386' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16386')
	                     UNION ALL VALUES ('16386'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16386' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16386'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16386'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16386')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16386' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16386' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16386' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
[unknown] LOG:  connection received: host=::1 port=43708
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp ERROR:  syntax error at or near "DELETE" at character 48
freecodecamp STATEMENT:  DELETE FROM students WHERE first_name = 'Rhea'
	DELETE FROM students WHERE first_name = 'Rhea'
	DELETE FROM students WHERE first_name = 'Rhea'
	bvnbjn
	INSERT INTO students(first_name, last_name, major_id, gpa) VALUES ('Rhea', 'Kellens', 1, 2.5);
freecodecamp LOG:  statement: DELETE FROM students WHERE first_name = 'Rhea';
[unknown] LOG:  connection received: host=::1 port=55798
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: SELECT * FROM students;
[unknown] LOG:  connection received: host=::1 port=49960
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES ('Rhea', 'Kellems', 1, 2.5);
[unknown] LOG:  connection received: host=::1 port=38012
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT * FROM students WHERE first_name='Rhea' AND last_name='Kellems' AND gpa=2.5 AND major_id IS NOT NULL
freecodecamp LOG:  statement: SELECT * FROM students;
[unknown] LOG:  connection received: host=127.0.0.1 port=50968
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='major'
[unknown] LOG:  connection received: host=127.0.0.1 port=50972
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=50982
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=50998
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=51000
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=51010
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Network Engineering'
[unknown] LOG:  connection received: host=127.0.0.1 port=51022
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=51036
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=51040
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Network Engineering'
[unknown] LOG:  connection received: host=127.0.0.1 port=51052
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Computer Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=51058
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=51068
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=51070
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=51082
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Computer Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=51088
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='System Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=51100
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=51108
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=51122
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=51134
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=51138
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=51148
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='System Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=51150
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=51158
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='System Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=51164
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='System Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=51174
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Computer Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=51182
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Computer Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=51196
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Network Engineering'
[unknown] LOG:  connection received: host=127.0.0.1 port=51210
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=51224
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Network Engineering'
[unknown] LOG:  connection received: host=127.0.0.1 port=33776
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='major'
[unknown] LOG:  connection received: host=127.0.0.1 port=33792
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('major')
[unknown] LOG:  connection received: host=127.0.0.1 port=33802
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=33812
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=33818
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=33824
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=33834
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=33846
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=::1 port=51602
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
freecodecamp LOG:  statement: SELECT * FROM majors;
freecodecamp ERROR:  syntax error at or near "TUNCATE" at character 1
freecodecamp STATEMENT:  TUNCATE majors;
freecodecamp LOG:  statement: TRUNCATE majors;
freecodecamp ERROR:  cannot truncate a table referenced in a foreign key constraint
freecodecamp DETAIL:  Table "students" references "majors".
freecodecamp HINT:  Truncate table "students" at the same time, or use TRUNCATE ... CASCADE.
freecodecamp STATEMENT:  TRUNCATE majors;
freecodecamp LOG:  statement: TRUNCATE students, majors_courses, majors;
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(majors)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16389';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16389' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16389' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16389' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16389')
	                     UNION ALL VALUES ('16389'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16389' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16389'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16389'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16389')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16389' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16389' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16389' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
freecodecamp LOG:  statement: SELECT *FROM majors;
freecodecamp LOG:  statement: SELECT *FROM majors_courses;
freecodecamp LOG:  statement: SELECT *FROM students;
freecodecamp LOG:  statement: SELECT *FROM courses;
freecodecamp LOG:  statement: TRUNCATE courses;
freecodecamp ERROR:  cannot truncate a table referenced in a foreign key constraint
freecodecamp DETAIL:  Table "majors_courses" references "courses".
freecodecamp HINT:  Truncate table "majors_courses" at the same time, or use TRUNCATE ... CASCADE.
freecodecamp STATEMENT:  TRUNCATE courses;
freecodecamp LOG:  statement: TRUNCATE courses, majors_courses;
freecodecamp LOG:  statement: SELECT *FROM courses;
[unknown] LOG:  connection received: host=127.0.0.1 port=49902
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='major'
[unknown] LOG:  connection received: host=127.0.0.1 port=49910
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('major')
[unknown] LOG:  connection received: host=127.0.0.1 port=49912
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=49914
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=49916
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=49932
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=49938
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=49952
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=49960
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=::1 port=37706
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
freecodecamp LOG:  statement: SELECT *FROM majors;
freecodecamp LOG:  statement: TRUNCATE majors;
freecodecamp ERROR:  cannot truncate a table referenced in a foreign key constraint
freecodecamp DETAIL:  Table "students" references "majors".
freecodecamp HINT:  Truncate table "students" at the same time, or use TRUNCATE ... CASCADE.
freecodecamp STATEMENT:  TRUNCATE majors;
freecodecamp LOG:  statement: TRUNCATE majors, students;
freecodecamp ERROR:  cannot truncate a table referenced in a foreign key constraint
freecodecamp DETAIL:  Table "majors_courses" references "majors".
freecodecamp HINT:  Truncate table "majors_courses" at the same time, or use TRUNCATE ... CASCADE.
freecodecamp STATEMENT:  TRUNCATE majors, students;
freecodecamp LOG:  statement: TRUNCATE majors, students, majors_courses;
freecodecamp LOG:  statement: SELECT *FROM majors;
[unknown] LOG:  connection received: host=127.0.0.1 port=58454
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=58468
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=58484
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=58490
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=58494
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=58498
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=58500
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=::1 port=36868
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
freecodecamp LOG:  statement: SELECT *FROM majors;
freecodecamp LOG:  statement: SELECT *FROM majors;
freecodecamp LOG:  statement: TRUNCATE majors, students, majors_courses;
freecodecamp LOG:  statement: TRUNCATE majors, students, majors_courses;
freecodecamp LOG:  statement: SELECT *FROM majors;
[unknown] LOG:  connection received: host=127.0.0.1 port=48572
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=48586
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=48598
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=48614
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=48624
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=48628
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=48630
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=::1 port=51286
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
freecodecamp LOG:  statement: TRUNCATE majors;
freecodecamp ERROR:  cannot truncate a table referenced in a foreign key constraint
freecodecamp DETAIL:  Table "students" references "majors".
freecodecamp HINT:  Truncate table "students" at the same time, or use TRUNCATE ... CASCADE.
freecodecamp STATEMENT:  TRUNCATE majors;
freecodecamp LOG:  statement: TRUNCATE majors, student;
freecodecamp ERROR:  relation "student" does not exist
freecodecamp STATEMENT:  TRUNCATE majors, student;
freecodecamp LOG:  statement: TRUNCATE majors, students, major_courses;
freecodecamp ERROR:  cannot truncate a table referenced in a foreign key constraint
freecodecamp DETAIL:  Table "majors_courses" references "majors".
freecodecamp HINT:  Truncate table "majors_courses" at the same time, or use TRUNCATE ... CASCADE.
freecodecamp STATEMENT:  TRUNCATE majors, students, major_courses;
freecodecamp LOG:  statement: TRUNCATE majors, students, majors_courses;
[unknown] LOG:  connection received: host=127.0.0.1 port=59396
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=59406
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=59412
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=59426
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=59434
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Data Structures and Algorithms')
[unknown] LOG:  connection received: host=127.0.0.1 port=59442
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=59452
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=59454
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=59466
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=59472
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Web Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=59478
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=59488
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=59498
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Database Systems')
[unknown] LOG:  connection received: host=127.0.0.1 port=59500
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=59502
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=127.0.0.1 port=59506
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=59516
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=::1 port=35588
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
postgres LOG:  statement: SELECT course_id FROM courses
freecodecamp LOG:  statement: select * from courses;
[unknown] LOG:  connection received: host=127.0.0.1 port=39640
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: TRUNCATE students, majors, courses, majors_courses
[unknown] LOG:  connection received: host=127.0.0.1 port=39644
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=39658
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=39674
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=39678
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=39682
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Data Structures and Algorithms')
[unknown] LOG:  connection received: host=127.0.0.1 port=39688
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=39694
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=39702
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=39718
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=39734
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Web Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=39746
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=39762
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=39774
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Database Systems')
[unknown] LOG:  connection received: host=127.0.0.1 port=39784
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=39792
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=127.0.0.1 port=39796
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=39810
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=::1 port=36910
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
postgres LOG:  statement: SELECT course_id FROM courses
freecodecamp LOG:  statement: select * from courses;
freecodecamp LOG:  statement: select * from courses;
freecodecamp LOG:  statement: select * from courses;
[unknown] LOG:  connection received: host=127.0.0.1 port=49878
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: TRUNCATE students, majors, courses, majors_courses
[unknown] LOG:  connection received: host=127.0.0.1 port=49888
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=49890
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=49904
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=49920
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=49926
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Data Structures and Algorithms')
[unknown] LOG:  connection received: host=127.0.0.1 port=49936
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=49938
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(21, 8)
[unknown] LOG:  connection received: host=127.0.0.1 port=49952
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=49968
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=49984
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=49990
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=50002
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Web Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=50012
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=50014
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(22, 9)
[unknown] LOG:  connection received: host=127.0.0.1 port=50030
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=50046
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=50050
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Database Systems')
[unknown] LOG:  connection received: host=127.0.0.1 port=50066
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=50082
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(21, 10)
[unknown] LOG:  connection received: host=127.0.0.1 port=50086
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=50090
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=127.0.0.1 port=50102
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=50114
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=50126
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(23, 8)
[unknown] LOG:  connection received: host=::1 port=43724
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
postgres LOG:  statement: SELECT course_id FROM courses
postgres LOG:  statement: SELECT major_id FROM majors_courses
freecodecamp LOG:  statement: select * from majors;
freecodecamp LOG:  statement: select * from courses;
freecodecamp LOG:  statement: select * from majors_courses;
[unknown] LOG:  connection received: host=127.0.0.1 port=48416
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: TRUNCATE students, majors, courses, majors_courses
[unknown] LOG:  connection received: host=127.0.0.1 port=48430
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=48438
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=48446
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=48450
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=48466
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Data Structures and Algorithms')
[unknown] LOG:  connection received: host=127.0.0.1 port=48470
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=48482
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(24, 11)
[unknown] LOG:  connection received: host=127.0.0.1 port=48486
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=48490
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=48504
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=48508
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=48516
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Web Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=48522
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=48526
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(25, 12)
[unknown] LOG:  connection received: host=127.0.0.1 port=48540
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=48550
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=48564
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Database Systems')
[unknown] LOG:  connection received: host=127.0.0.1 port=48578
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=48588
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(24, 13)
[unknown] LOG:  connection received: host=127.0.0.1 port=48598
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=48612
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=127.0.0.1 port=48628
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=48636
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=48640
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(26, 11)
[unknown] LOG:  connection received: host=::1 port=37056
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
postgres LOG:  statement: SELECT course_id FROM courses
postgres LOG:  statement: SELECT major_id FROM majors_courses
[unknown] LOG:  connection received: host=127.0.0.1 port=58826
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: TRUNCATE students, majors, courses, majors_courses
[unknown] LOG:  connection received: host=127.0.0.1 port=58834
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=58842
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=58846
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=58854
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=58866
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Data Structures and Algorithms')
[unknown] LOG:  connection received: host=127.0.0.1 port=58878
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=58890
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(27, 14)
[unknown] LOG:  connection received: host=127.0.0.1 port=58902
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=58916
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=58928
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=58934
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=58936
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Web Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=58952
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=58968
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(28, 15)
[unknown] LOG:  connection received: host=127.0.0.1 port=58976
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=58984
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=58998
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Database Systems')
[unknown] LOG:  connection received: host=127.0.0.1 port=59010
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=59018
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(27, 16)
[unknown] LOG:  connection received: host=127.0.0.1 port=59020
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=59028
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=127.0.0.1 port=59038
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=59040
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=59046
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(29, 14)
[unknown] LOG:  connection received: host=127.0.0.1 port=59050
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=59056
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='null'
[unknown] LOG:  connection received: host=127.0.0.1 port=59060
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=59070
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=59086
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major=''
[unknown] LOG:  connection received: host=::1 port=45098
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
postgres LOG:  statement: SELECT course_id FROM courses
postgres LOG:  statement: SELECT major_id FROM majors_courses
[unknown] LOG:  connection received: host=127.0.0.1 port=57028
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: TRUNCATE students, majors, courses, majors_courses
[unknown] LOG:  connection received: host=127.0.0.1 port=57044
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=57048
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=57052
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=57066
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=57080
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Data Structures and Algorithms')
[unknown] LOG:  connection received: host=127.0.0.1 port=57082
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=57088
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(30, 17)
[unknown] LOG:  connection received: host=127.0.0.1 port=57094
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=57100
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=57110
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=57122
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=57134
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Web Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=57142
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=57150
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(31, 18)
[unknown] LOG:  connection received: host=127.0.0.1 port=57160
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=57164
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=57172
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Database Systems')
[unknown] LOG:  connection received: host=127.0.0.1 port=57178
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=57194
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(30, 19)
[unknown] LOG:  connection received: host=127.0.0.1 port=57198
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=57210
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=127.0.0.1 port=57226
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=57232
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=57248
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(32, 17)
[unknown] LOG:  connection received: host=::1 port=59316
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
postgres LOG:  statement: SELECT course_id FROM courses
postgres LOG:  statement: SELECT major_id FROM majors_courses
freecodecamp LOG:  statement: select * from students;
freecodecamp LOG:  statement: SELECT c.oid,
	  n.nspname,
	  c.relname
	FROM pg_catalog.pg_class c
	     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
	WHERE c.relname OPERATOR(pg_catalog.~) '^(students)$' COLLATE pg_catalog.default
	  AND pg_catalog.pg_table_is_visible(c.oid)
	ORDER BY 2, 3;
freecodecamp LOG:  statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, false AS relhasoids, c.relispartition, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident, am.amname
	FROM pg_catalog.pg_class c
	 LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)
	LEFT JOIN pg_catalog.pg_am am ON (c.relam = am.oid)
	WHERE c.oid = '16386';
freecodecamp LOG:  statement: SELECT a.attname,
	  pg_catalog.format_type(a.atttypid, a.atttypmod),
	  (SELECT pg_catalog.pg_get_expr(d.adbin, d.adrelid, true)
	   FROM pg_catalog.pg_attrdef d
	   WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),
	  a.attnotnull,
	  (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t
	   WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,
	  a.attidentity,
	  a.attgenerated
	FROM pg_catalog.pg_attribute a
	WHERE a.attrelid = '16386' AND a.attnum > 0 AND NOT a.attisdropped
	ORDER BY a.attnum;
freecodecamp LOG:  statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),
	  pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace
	FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i
	  LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))
	WHERE c.oid = '16386' AND c.oid = i.indrelid AND i.indexrelid = c2.oid
	ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
freecodecamp LOG:  statement: SELECT true as sametable, conname,
	  pg_catalog.pg_get_constraintdef(r.oid, true) as condef,
	  conrelid::pg_catalog.regclass AS ontable
	FROM pg_catalog.pg_constraint r
	WHERE r.conrelid = '16386' AND r.contype = 'f'
	     AND conparentid = 0
	ORDER BY conname
freecodecamp LOG:  statement: SELECT conname, conrelid::pg_catalog.regclass AS ontable,
	       pg_catalog.pg_get_constraintdef(oid, true) AS condef
	  FROM pg_catalog.pg_constraint c
	 WHERE confrelid IN (SELECT pg_catalog.pg_partition_ancestors('16386')
	                     UNION ALL VALUES ('16386'::pg_catalog.regclass))
	       AND contype = 'f' AND conparentid = 0
	ORDER BY conname;
freecodecamp LOG:  statement: SELECT pol.polname, pol.polpermissive,
	  CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,
	  pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),
	  pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),
	  CASE pol.polcmd
	    WHEN 'r' THEN 'SELECT'
	    WHEN 'a' THEN 'INSERT'
	    WHEN 'w' THEN 'UPDATE'
	    WHEN 'd' THEN 'DELETE'
	    END AS cmd
	FROM pg_catalog.pg_policy pol
	WHERE pol.polrelid = '16386' ORDER BY 1;
freecodecamp LOG:  statement: SELECT oid, stxrelid::pg_catalog.regclass, stxnamespace::pg_catalog.regnamespace AS nsp, stxname,
	  (SELECT pg_catalog.string_agg(pg_catalog.quote_ident(attname),', ')
	   FROM pg_catalog.unnest(stxkeys) s(attnum)
	   JOIN pg_catalog.pg_attribute a ON (stxrelid = a.attrelid AND
	        a.attnum = s.attnum AND NOT attisdropped)) AS columns,
	  'd' = any(stxkind) AS ndist_enabled,
	  'f' = any(stxkind) AS deps_enabled,
	  'm' = any(stxkind) AS mcv_enabled
	FROM pg_catalog.pg_statistic_ext stat WHERE stxrelid = '16386'
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT pubname
	FROM pg_catalog.pg_publication p
	JOIN pg_catalog.pg_publication_rel pr ON p.oid = pr.prpubid
	WHERE pr.prrelid = '16386'
	UNION ALL
	SELECT pubname
	FROM pg_catalog.pg_publication p
	WHERE p.puballtables AND pg_catalog.pg_relation_is_publishable('16386')
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT t.tgname, pg_catalog.pg_get_triggerdef(t.oid, true), t.tgenabled, t.tgisinternal
	FROM pg_catalog.pg_trigger t
	WHERE t.tgrelid = '16386' AND (NOT t.tgisinternal OR (t.tgisinternal AND t.tgenabled = 'D') 
	    OR EXISTS (SELECT 1 FROM pg_catalog.pg_depend WHERE objid = t.oid 
	        AND refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass))
	ORDER BY 1;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '16386' AND c.relkind != 'p' ORDER BY inhseqno;
freecodecamp LOG:  statement: SELECT c.oid::pg_catalog.regclass,       pg_catalog.pg_get_expr(c.relpartbound, c.oid),       c.relkind FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '16386' ORDER BY pg_catalog.pg_get_expr(c.relpartbound, c.oid) = 'DEFAULT',          c.oid::pg_catalog.regclass::pg_catalog.text;
[unknown] LOG:  connection received: host=127.0.0.1 port=54142
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: TRUNCATE students, majors, courses, majors_courses
[unknown] LOG:  connection received: host=127.0.0.1 port=54148
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=54152
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=54154
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=54162
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=54164
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Data Structures and Algorithms')
[unknown] LOG:  connection received: host=127.0.0.1 port=54174
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=54178
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(33, 20)
[unknown] LOG:  connection received: host=127.0.0.1 port=54186
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=54188
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=54194
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=54196
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=54204
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Web Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=54206
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=54222
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(34, 21)
[unknown] LOG:  connection received: host=127.0.0.1 port=54238
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=54250
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=54264
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Database Systems')
[unknown] LOG:  connection received: host=127.0.0.1 port=54270
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=54280
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(33, 22)
[unknown] LOG:  connection received: host=127.0.0.1 port=54286
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=54290
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=127.0.0.1 port=54296
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=54298
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=54302
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(35, 20)
[unknown] LOG:  connection received: host=::1 port=47642
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
postgres LOG:  statement: SELECT course_id FROM courses
postgres LOG:  statement: SELECT major_id FROM majors_courses
postgres LOG:  statement: SELECT student_id FROM students
freecodecamp LOG:  statement: select * from students;
freecodecamp LOG:  statement: select * from majors_courses;
freecodecamp LOG:  statement: select * from courses;
freecodecamp LOG:  statement: select * from courses;
freecodecamp LOG:  statement: select * from majors;
freecodecamp LOG:  statement: select * from majors;
freecodecamp LOG:  statement: select * from courses;
freecodecamp LOG:  statement: select * from majors_courses;
freecodecamp LOG:  statement: select * from students;
 LOG:  received fast shutdown request
 LOG:  aborting any active transactions
freecodecamp FATAL:  terminating connection due to administrator command
 LOG:  background worker "logical replication launcher" (PID 858) exited with exit code 1
 LOG:  shutting down
 LOG:  database system is shut down
 LOG:  database system was shut down at 2024-07-07 16:51:20 CEST
 LOG:  database system is ready to accept connections
[unknown] LOG:  connection received: host=[local]
[unknown] LOG:  connection received: host=[local]
postgres LOG:  connection authorized: user=postgres database=template1 application_name=psql
postgres LOG:  statement: 
[unknown] LOG:  connection received: host=[local]
postgres LOG:  connection authorized: user=postgres database=template1 application_name=psql
postgres LOG:  statement: 
[unknown] LOG:  connection received: host=[local]
postgres LOG:  connection authorized: user=postgres database=template1 application_name=psql
postgres LOG:  statement: 
[unknown] LOG:  connection received: host=127.0.0.1 port=36270
postgres LOG:  connection authorized: user=postgres database=postgres application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
postgres LOG:  statement: SELECT 'CREATE USER freecodecamp WITH CREATEDB' WHERE NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname='freecodecamp')
[unknown] LOG:  connection received: host=127.0.0.1 port=36274
postgres LOG:  connection authorized: user=postgres database=postgres application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
postgres LOG:  statement: SELECT pg_terminate_backend(pg_stat_activity.pid)
	FROM pg_stat_activity
	WHERE usename = 'freecodecamp';
postgres LOG:  statement: SET statement_timeout = 0;
postgres LOG:  statement: SET lock_timeout = 0;
postgres LOG:  statement: SET idle_in_transaction_session_timeout = 0;
postgres LOG:  statement: SET client_encoding = 'UTF8';
postgres LOG:  statement: SET standard_conforming_strings = on;
postgres LOG:  statement: SELECT pg_catalog.set_config('search_path', '', false);
postgres LOG:  statement: SET check_function_bodies = false;
postgres LOG:  statement: SET xmloption = content;
postgres LOG:  statement: SET client_min_messages = warning;
postgres LOG:  statement: SET row_security = off;
postgres LOG:  statement: DROP DATABASE IF EXISTS students;
postgres LOG:  statement: CREATE DATABASE students WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'C.UTF-8' LC_CTYPE = 'C.UTF-8';
postgres LOG:  statement: ALTER DATABASE students OWNER TO freecodecamp;
[unknown] LOG:  connection received: host=127.0.0.1 port=36276
postgres LOG:  connection authorized: user=postgres database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
postgres LOG:  statement: SET statement_timeout = 0;
postgres LOG:  statement: SET lock_timeout = 0;
postgres LOG:  statement: SET idle_in_transaction_session_timeout = 0;
postgres LOG:  statement: SET client_encoding = 'UTF8';
postgres LOG:  statement: SET standard_conforming_strings = on;
postgres LOG:  statement: SELECT pg_catalog.set_config('search_path', '', false);
postgres LOG:  statement: SET check_function_bodies = false;
postgres LOG:  statement: SET xmloption = content;
postgres LOG:  statement: SET client_min_messages = warning;
postgres LOG:  statement: SET row_security = off;
postgres LOG:  statement: SET default_tablespace = '';
postgres LOG:  statement: SET default_table_access_method = heap;
postgres LOG:  statement: CREATE TABLE public.courses (
	    course_id integer NOT NULL,
	    course character varying(100) NOT NULL
	);
postgres LOG:  statement: ALTER TABLE public.courses OWNER TO freecodecamp;
postgres LOG:  statement: CREATE SEQUENCE public.courses_course_id_seq
	    AS integer
	    START WITH 1
	    INCREMENT BY 1
	    NO MINVALUE
	    NO MAXVALUE
	    CACHE 1;
postgres LOG:  statement: ALTER TABLE public.courses_course_id_seq OWNER TO freecodecamp;
postgres LOG:  statement: ALTER SEQUENCE public.courses_course_id_seq OWNED BY public.courses.course_id;
postgres LOG:  statement: CREATE TABLE public.majors (
	    major_id integer NOT NULL,
	    major character varying(50) NOT NULL
	);
postgres LOG:  statement: ALTER TABLE public.majors OWNER TO freecodecamp;
postgres LOG:  statement: CREATE TABLE public.majors_courses (
	    major_id integer NOT NULL,
	    course_id integer NOT NULL
	);
postgres LOG:  statement: ALTER TABLE public.majors_courses OWNER TO freecodecamp;
postgres LOG:  statement: CREATE SEQUENCE public.majors_major_id_seq
	    AS integer
	    START WITH 1
	    INCREMENT BY 1
	    NO MINVALUE
	    NO MAXVALUE
	    CACHE 1;
postgres LOG:  statement: ALTER TABLE public.majors_major_id_seq OWNER TO freecodecamp;
postgres LOG:  statement: ALTER SEQUENCE public.majors_major_id_seq OWNED BY public.majors.major_id;
postgres LOG:  statement: CREATE TABLE public.students (
	    student_id integer NOT NULL,
	    first_name character varying(50) NOT NULL,
	    last_name character varying(50) NOT NULL,
	    major_id integer,
	    gpa numeric(2,1)
	);
postgres LOG:  statement: ALTER TABLE public.students OWNER TO freecodecamp;
postgres LOG:  statement: CREATE SEQUENCE public.students_student_id_seq
	    AS integer
	    START WITH 1
	    INCREMENT BY 1
	    NO MINVALUE
	    NO MAXVALUE
	    CACHE 1;
postgres LOG:  statement: ALTER TABLE public.students_student_id_seq OWNER TO freecodecamp;
postgres LOG:  statement: ALTER SEQUENCE public.students_student_id_seq OWNED BY public.students.student_id;
postgres LOG:  statement: ALTER TABLE ONLY public.courses ALTER COLUMN course_id SET DEFAULT nextval('public.courses_course_id_seq'::regclass);
postgres LOG:  statement: ALTER TABLE ONLY public.majors ALTER COLUMN major_id SET DEFAULT nextval('public.majors_major_id_seq'::regclass);
postgres LOG:  statement: ALTER TABLE ONLY public.students ALTER COLUMN student_id SET DEFAULT nextval('public.students_student_id_seq'::regclass);
postgres LOG:  statement: INSERT INTO public.courses VALUES (17, 'Data Structures and Algorithms');
postgres LOG:  statement: INSERT INTO public.courses VALUES (18, 'Web Programming');
postgres LOG:  statement: INSERT INTO public.courses VALUES (19, 'Database Systems');
postgres LOG:  statement: INSERT INTO public.majors VALUES (30, 'Database Administration');
postgres LOG:  statement: INSERT INTO public.majors VALUES (31, 'Web Development');
postgres LOG:  statement: INSERT INTO public.majors VALUES (32, 'Data Science');
postgres LOG:  statement: INSERT INTO public.majors_courses VALUES (30, 17);
postgres LOG:  statement: INSERT INTO public.majors_courses VALUES (31, 18);
postgres LOG:  statement: INSERT INTO public.majors_courses VALUES (30, 19);
postgres LOG:  statement: INSERT INTO public.majors_courses VALUES (32, 17);
postgres LOG:  statement: SELECT pg_catalog.setval('public.courses_course_id_seq', 19, true);
postgres LOG:  statement: SELECT pg_catalog.setval('public.majors_major_id_seq', 32, true);
postgres LOG:  statement: SELECT pg_catalog.setval('public.students_student_id_seq', 1, true);
postgres LOG:  statement: ALTER TABLE ONLY public.courses
	    ADD CONSTRAINT courses_pkey PRIMARY KEY (course_id);
postgres LOG:  statement: ALTER TABLE ONLY public.majors_courses
	    ADD CONSTRAINT majors_courses_pkey PRIMARY KEY (major_id, course_id);
postgres LOG:  statement: ALTER TABLE ONLY public.majors
	    ADD CONSTRAINT majors_pkey PRIMARY KEY (major_id);
postgres LOG:  statement: ALTER TABLE ONLY public.students
	    ADD CONSTRAINT students_pkey PRIMARY KEY (student_id);
postgres LOG:  statement: ALTER TABLE ONLY public.majors_courses
	    ADD CONSTRAINT majors_courses_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.courses(course_id);
postgres LOG:  statement: ALTER TABLE ONLY public.majors_courses
	    ADD CONSTRAINT majors_courses_major_id_fkey FOREIGN KEY (major_id) REFERENCES public.majors(major_id);
postgres LOG:  statement: ALTER TABLE ONLY public.students
	    ADD CONSTRAINT students_major_id_fkey FOREIGN KEY (major_id) REFERENCES public.majors(major_id);
[unknown] LOG:  connection received: host=127.0.0.1 port=58394
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: TRUNCATE students, majors, courses, majors_courses
[unknown] LOG:  connection received: host=127.0.0.1 port=58400
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=58410
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=58424
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=58430
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=58434
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Data Structures and Algorithms')
[unknown] LOG:  connection received: host=127.0.0.1 port=58444
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=58454
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(33, 20)
[unknown] LOG:  connection received: host=127.0.0.1 port=58464
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=58472
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=58486
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=58496
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=58512
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Web Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=58518
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=58522
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(34, 21)
[unknown] LOG:  connection received: host=127.0.0.1 port=58538
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=58542
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=58548
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Database Systems')
[unknown] LOG:  connection received: host=127.0.0.1 port=58550
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=58564
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(33, 22)
[unknown] LOG:  connection received: host=127.0.0.1 port=58566
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=58578
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=127.0.0.1 port=58594
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=58600
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=58608
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(35, 20)
[unknown] LOG:  connection received: host=127.0.0.1 port=58618
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=58630
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Rhea', 'Kellems', 33, 2.5)
[unknown] LOG:  connection received: host=127.0.0.1 port=58646
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='null'
[unknown] LOG:  connection received: host=127.0.0.1 port=58656
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Emma', 'Gilbert', null, null)
[unknown] LOG:  connection received: host=127.0.0.1 port=58662
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=58672
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Kimberly', 'Whitley', 34, 3.8)
[unknown] LOG:  connection received: host=127.0.0.1 port=58682
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=58686
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Jimmy', 'Felipe', 33, 3.7)
[unknown] LOG:  connection received: host=::1 port=60878
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
postgres LOG:  statement: SELECT course_id FROM courses
postgres LOG:  statement: SELECT major_id FROM majors_courses
postgres LOG:  statement: SELECT student_id FROM students
[unknown] LOG:  connection received: host=127.0.0.1 port=38592
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp ERROR:  syntax error at or near "psql" at character 1
freecodecamp STATEMENT:  psql 
	select * from students;
freecodecamp LOG:  statement: select * from students;
[unknown] LOG:  connection received: host=127.0.0.1 port=43784
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: TRUNCATE students, majors, courses, majors_courses
[unknown] LOG:  connection received: host=127.0.0.1 port=43800
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=43802
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Database Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=43814
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=43820
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=43826
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Data Structures and Algorithms')
[unknown] LOG:  connection received: host=127.0.0.1 port=43830
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=43842
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(36, 23)
[unknown] LOG:  connection received: host=127.0.0.1 port=43846
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=43862
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Web Development')
[unknown] LOG:  connection received: host=127.0.0.1 port=43874
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=43878
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=43880
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Web Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=43890
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=43904
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(37, 24)
[unknown] LOG:  connection received: host=127.0.0.1 port=43916
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=43918
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=43928
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Database Systems')
[unknown] LOG:  connection received: host=127.0.0.1 port=43944
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Database Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=43956
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(36, 25)
[unknown] LOG:  connection received: host=127.0.0.1 port=43966
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=43968
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Data Science')
[unknown] LOG:  connection received: host=127.0.0.1 port=43982
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=43992
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=44008
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(38, 23)
[unknown] LOG:  connection received: host=127.0.0.1 port=44014
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Network Engineering'
[unknown] LOG:  connection received: host=127.0.0.1 port=44028
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Network Engineering')
[unknown] LOG:  connection received: host=127.0.0.1 port=44036
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Network Engineering'
[unknown] LOG:  connection received: host=127.0.0.1 port=44046
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Computer Networks'
[unknown] LOG:  connection received: host=127.0.0.1 port=44048
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Computer Networks')
[unknown] LOG:  connection received: host=127.0.0.1 port=44064
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Computer Networks'
[unknown] LOG:  connection received: host=127.0.0.1 port=44070
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(39, 26)
[unknown] LOG:  connection received: host=127.0.0.1 port=44078
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=44080
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='SQL'
[unknown] LOG:  connection received: host=127.0.0.1 port=44090
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('SQL')
[unknown] LOG:  connection received: host=127.0.0.1 port=44096
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='SQL'
[unknown] LOG:  connection received: host=127.0.0.1 port=44110
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(36, 27)
[unknown] LOG:  connection received: host=127.0.0.1 port=44112
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=44126
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Machine Learning'
[unknown] LOG:  connection received: host=127.0.0.1 port=44136
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Machine Learning')
[unknown] LOG:  connection received: host=127.0.0.1 port=44150
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Machine Learning'
[unknown] LOG:  connection received: host=127.0.0.1 port=44166
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(38, 28)
[unknown] LOG:  connection received: host=127.0.0.1 port=44174
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Network Engineering'
[unknown] LOG:  connection received: host=127.0.0.1 port=44182
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Computer Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=44186
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Computer Systems')
[unknown] LOG:  connection received: host=127.0.0.1 port=44192
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Computer Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=44198
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(39, 29)
[unknown] LOG:  connection received: host=127.0.0.1 port=44204
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Computer Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=44216
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Computer Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=44220
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Computer Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=44230
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Computer Networks'
[unknown] LOG:  connection received: host=127.0.0.1 port=44236
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(40, 26)
[unknown] LOG:  connection received: host=127.0.0.1 port=44240
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=44252
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Applications'
[unknown] LOG:  connection received: host=127.0.0.1 port=44258
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Web Applications')
[unknown] LOG:  connection received: host=127.0.0.1 port=44262
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Applications'
[unknown] LOG:  connection received: host=127.0.0.1 port=44266
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(36, 30)
[unknown] LOG:  connection received: host=127.0.0.1 port=44276
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=44284
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('Game Design')
[unknown] LOG:  connection received: host=127.0.0.1 port=44296
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=44312
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Artificial Intelligence'
[unknown] LOG:  connection received: host=127.0.0.1 port=44324
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Artificial Intelligence')
[unknown] LOG:  connection received: host=127.0.0.1 port=44336
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Artificial Intelligence'
[unknown] LOG:  connection received: host=127.0.0.1 port=44352
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(41, 31)
[unknown] LOG:  connection received: host=127.0.0.1 port=44356
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=44364
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Python'
[unknown] LOG:  connection received: host=127.0.0.1 port=44376
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Python')
[unknown] LOG:  connection received: host=127.0.0.1 port=44380
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Python'
[unknown] LOG:  connection received: host=127.0.0.1 port=44390
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(38, 32)
[unknown] LOG:  connection received: host=127.0.0.1 port=44394
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Computer Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=44396
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Object-Oriented Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=44404
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Object-Oriented Programming')
[unknown] LOG:  connection received: host=127.0.0.1 port=44416
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Object-Oriented Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=44422
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(40, 33)
[unknown] LOG:  connection received: host=127.0.0.1 port=44434
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='System Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=44438
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors(major) VALUES('System Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=44440
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='System Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=44450
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Computer Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=44460
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(42, 29)
[unknown] LOG:  connection received: host=127.0.0.1 port=44468
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=44476
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Calculus'
[unknown] LOG:  connection received: host=127.0.0.1 port=44492
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Calculus')
[unknown] LOG:  connection received: host=127.0.0.1 port=44502
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Calculus'
[unknown] LOG:  connection received: host=127.0.0.1 port=44506
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(41, 34)
[unknown] LOG:  connection received: host=127.0.0.1 port=44508
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=44522
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Data Structures and Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=44538
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(37, 23)
[unknown] LOG:  connection received: host=127.0.0.1 port=44546
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=44556
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Calculus'
[unknown] LOG:  connection received: host=127.0.0.1 port=44564
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(38, 34)
[unknown] LOG:  connection received: host=127.0.0.1 port=44574
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=44578
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Object-Oriented Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=44588
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(37, 33)
[unknown] LOG:  connection received: host=127.0.0.1 port=44604
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=44608
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Game Architecture'
[unknown] LOG:  connection received: host=127.0.0.1 port=44618
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Game Architecture')
[unknown] LOG:  connection received: host=127.0.0.1 port=44620
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Game Architecture'
[unknown] LOG:  connection received: host=127.0.0.1 port=44634
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(41, 35)
[unknown] LOG:  connection received: host=127.0.0.1 port=44650
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='System Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=44658
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Computer Networks'
[unknown] LOG:  connection received: host=127.0.0.1 port=44666
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(42, 26)
[unknown] LOG:  connection received: host=127.0.0.1 port=44678
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=44690
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=44706
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Algorithms')
[unknown] LOG:  connection received: host=127.0.0.1 port=44720
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=44732
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(41, 36)
[unknown] LOG:  connection received: host=127.0.0.1 port=44736
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='System Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=44740
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='UNIX'
[unknown] LOG:  connection received: host=127.0.0.1 port=44744
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('UNIX')
[unknown] LOG:  connection received: host=127.0.0.1 port=44752
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='UNIX'
[unknown] LOG:  connection received: host=127.0.0.1 port=44762
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(42, 37)
[unknown] LOG:  connection received: host=127.0.0.1 port=44776
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='System Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=44786
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Server Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=44796
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Server Administration')
[unknown] LOG:  connection received: host=127.0.0.1 port=44806
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Server Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=44814
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(42, 38)
[unknown] LOG:  connection received: host=127.0.0.1 port=44816
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Computer Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=44826
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Computer Systems'
[unknown] LOG:  connection received: host=127.0.0.1 port=44838
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(40, 29)
[unknown] LOG:  connection received: host=127.0.0.1 port=44854
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Computer Programming'
[unknown] LOG:  connection received: host=127.0.0.1 port=44866
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Python'
[unknown] LOG:  connection received: host=127.0.0.1 port=44880
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(40, 32)
[unknown] LOG:  connection received: host=127.0.0.1 port=44896
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Network Engineering'
[unknown] LOG:  connection received: host=127.0.0.1 port=44904
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Network Security'
[unknown] LOG:  connection received: host=127.0.0.1 port=44912
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO courses(course) VALUES('Network Security')
[unknown] LOG:  connection received: host=127.0.0.1 port=44922
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Network Security'
[unknown] LOG:  connection received: host=127.0.0.1 port=44928
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(39, 39)
[unknown] LOG:  connection received: host=127.0.0.1 port=44942
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=44956
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Web Applications'
[unknown] LOG:  connection received: host=127.0.0.1 port=44968
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(37, 30)
[unknown] LOG:  connection received: host=127.0.0.1 port=44978
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Network Engineering'
[unknown] LOG:  connection received: host=127.0.0.1 port=44992
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT course_id FROM courses WHERE course='Algorithms'
[unknown] LOG:  connection received: host=127.0.0.1 port=44996
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO majors_courses(major_id, course_id) VALUES(39, 36)
[unknown] LOG:  connection received: host=127.0.0.1 port=45010
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=45026
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Rhea', 'Kellems', 36, 2.5)
[unknown] LOG:  connection received: host=127.0.0.1 port=45034
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='null'
[unknown] LOG:  connection received: host=127.0.0.1 port=45048
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Emma', 'Gilbert', null, null)
[unknown] LOG:  connection received: host=127.0.0.1 port=45062
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=45076
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Kimberly', 'Whitley', 37, 3.8)
[unknown] LOG:  connection received: host=127.0.0.1 port=45090
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=45102
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Jimmy', 'Felipe', 36, 3.7)
[unknown] LOG:  connection received: host=127.0.0.1 port=45118
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='null'
[unknown] LOG:  connection received: host=127.0.0.1 port=45130
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Kyle', 'Stimson', null, 2.8)
[unknown] LOG:  connection received: host=127.0.0.1 port=45142
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=45148
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Casares', 'Hijo', 41, 4.0)
[unknown] LOG:  connection received: host=127.0.0.1 port=45154
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='null'
[unknown] LOG:  connection received: host=127.0.0.1 port=45164
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Noe', 'Savage', null, 3.6)
[unknown] LOG:  connection received: host=127.0.0.1 port=45168
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=45170
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Sterling', 'Boss', 41, 3.9)
[unknown] LOG:  connection received: host=127.0.0.1 port=45174
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='null'
[unknown] LOG:  connection received: host=127.0.0.1 port=45184
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Brian', 'Davis', null, 2.3)
[unknown] LOG:  connection received: host=127.0.0.1 port=45196
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=45200
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Kaija', 'Uronen', 41, 3.7)
[unknown] LOG:  connection received: host=127.0.0.1 port=45210
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=45226
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Faye', 'Conn', 41, 2.1)
[unknown] LOG:  connection received: host=127.0.0.1 port=45232
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=45248
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Efren', 'Reilly', 37, 3.9)
[unknown] LOG:  connection received: host=127.0.0.1 port=45260
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='null'
[unknown] LOG:  connection received: host=127.0.0.1 port=45274
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Danh', 'Nhung', null, 2.4)
[unknown] LOG:  connection received: host=127.0.0.1 port=45280
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=45290
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Maxine', 'Hagenes', 36, 2.9)
[unknown] LOG:  connection received: host=127.0.0.1 port=45304
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=45306
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Larry', 'Saunders', 38, 2.2)
[unknown] LOG:  connection received: host=127.0.0.1 port=45320
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=45330
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Karl', 'Kuhar', 37, null)
[unknown] LOG:  connection received: host=127.0.0.1 port=45342
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=45352
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Lieke', 'Hazenveld', 41, 3.5)
[unknown] LOG:  connection received: host=127.0.0.1 port=45362
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=45364
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Obie', 'Hilpert', 37, null)
[unknown] LOG:  connection received: host=127.0.0.1 port=45372
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='null'
[unknown] LOG:  connection received: host=127.0.0.1 port=45376
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Peter', 'Booysen', null, 2.9)
[unknown] LOG:  connection received: host=127.0.0.1 port=45380
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=45382
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Nathan', 'Turner', 36, 3.3)
[unknown] LOG:  connection received: host=127.0.0.1 port=45396
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=45412
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Gerald', 'Osiki', 38, 2.2)
[unknown] LOG:  connection received: host=127.0.0.1 port=45418
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Game Design'
[unknown] LOG:  connection received: host=127.0.0.1 port=45422
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Vanya', 'Hassanah', 41, 4.0)
[unknown] LOG:  connection received: host=127.0.0.1 port=45430
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=45436
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Roxelana', 'Florescu', 36, 3.2)
[unknown] LOG:  connection received: host=127.0.0.1 port=45442
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=45450
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Helene', 'Parker', 38, 3.4)
[unknown] LOG:  connection received: host=127.0.0.1 port=45458
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=45470
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Mariana', 'Russel', 37, 1.8)
[unknown] LOG:  connection received: host=127.0.0.1 port=45474
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='null'
[unknown] LOG:  connection received: host=127.0.0.1 port=45488
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Ajit', 'Dhungel', null, 3.0)
[unknown] LOG:  connection received: host=127.0.0.1 port=45492
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Database Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=45494
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Mehdi', 'Vandenberghe', 36, 1.9)
[unknown] LOG:  connection received: host=127.0.0.1 port=45510
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Web Development'
[unknown] LOG:  connection received: host=127.0.0.1 port=45524
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Dejon', 'Howell', 37, 4.0)
[unknown] LOG:  connection received: host=127.0.0.1 port=45538
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='System Administration'
[unknown] LOG:  connection received: host=127.0.0.1 port=45548
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Aliya', 'Gulgowski', 42, 2.6)
[unknown] LOG:  connection received: host=127.0.0.1 port=45556
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='Data Science'
[unknown] LOG:  connection received: host=127.0.0.1 port=45566
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Ana', 'Tupajic', 38, 3.1)
[unknown] LOG:  connection received: host=127.0.0.1 port=45578
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT major_id FROM majors WHERE major='null'
[unknown] LOG:  connection received: host=127.0.0.1 port=45588
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=psql SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: INSERT INTO students(first_name, last_name, major_id, gpa) VALUES('Hugo', 'Duran', null, 3.8)
[unknown] LOG:  connection received: host=::1 port=52910
postgres LOG:  connection authorized: user=postgres database=students
postgres LOG:  statement: SELECT major_id FROM majors
postgres LOG:  statement: SELECT course_id FROM courses
postgres LOG:  statement: SELECT major_id FROM majors_courses
postgres LOG:  statement: SELECT student_id FROM students
freecodecamp LOG:  statement: select * from students;
freecodecamp LOG:  statement: select * from majors;
freecodecamp LOG:  statement: select * from courses;
freecodecamp LOG:  statement: select * from majors_courses;
[unknown] LOG:  connection received: host=127.0.0.1 port=50016
freecodecamp LOG:  connection authorized: user=freecodecamp database=students application_name=pg_dump SSL enabled (protocol=TLSv1.3, cipher=TLS_AES_256_GCM_SHA384, bits=256, compression=off)
freecodecamp LOG:  statement: SELECT pg_catalog.set_config('search_path', '', false);
freecodecamp LOG:  statement: SELECT pg_catalog.pg_is_in_recovery()
freecodecamp LOG:  statement: SELECT pg_catalog.set_config('search_path', '', false);
freecodecamp LOG:  statement: SET DATESTYLE = ISO
freecodecamp LOG:  statement: SET INTERVALSTYLE = POSTGRES
freecodecamp LOG:  statement: SET extra_float_digits TO 3
freecodecamp LOG:  statement: SET synchronize_seqscans TO off
freecodecamp LOG:  statement: SET statement_timeout = 0
freecodecamp LOG:  statement: SET lock_timeout = 0
freecodecamp LOG:  statement: SET idle_in_transaction_session_timeout = 0
freecodecamp LOG:  statement: SET row_security = off
freecodecamp LOG:  statement: BEGIN
freecodecamp LOG:  statement: SET TRANSACTION ISOLATION LEVEL REPEATABLE READ, READ ONLY
freecodecamp LOG:  statement: SELECT x.tableoid, x.oid, x.extname, n.nspname, x.extrelocatable, x.extversion, x.extconfig, x.extcondition FROM pg_extension x JOIN pg_namespace n ON n.oid = x.extnamespace
freecodecamp LOG:  statement: SELECT classid, objid, refobjid FROM pg_depend WHERE refclassid = 'pg_extension'::regclass AND deptype = 'e' ORDER BY 3
freecodecamp LOG:  statement: SELECT n.tableoid, n.oid, n.nspname, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = nspowner) AS rolname, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(n.nspacl,pg_catalog.acldefault('n',n.nspowner))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('n',n.nspowner))) AS init(init_acl) WHERE acl = init_acl)) as foo) as nspacl, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('n',n.nspowner))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(n.nspacl,pg_catalog.acldefault('n',n.nspowner))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) as rnspacl, NULL as initnspacl, NULL as initrnspacl FROM pg_namespace n LEFT JOIN pg_init_privs pip ON (n.oid = pip.objoid AND pip.classoid = 'pg_namespace'::regclass AND pip.objsubid = 0) 
freecodecamp LOG:  statement: SELECT c.tableoid, c.oid, c.relname, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(c.relacl,pg_catalog.acldefault(CASE WHEN c.relkind = 'S' THEN 's' ELSE 'r' END::"char",c.relowner))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault(CASE WHEN c.relkind = 'S' THEN 's' ELSE 'r' END::"char",c.relowner))) AS init(init_acl) WHERE acl = init_acl)) as foo) AS relacl, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault(CASE WHEN c.relkind = 'S' THEN 's' ELSE 'r' END::"char",c.relowner))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(c.relacl,pg_catalog.acldefault(CASE WHEN c.relkind = 'S' THEN 's' ELSE 'r' END::"char",c.relowner))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) as rrelacl, NULL AS initrelacl, NULL as initrrelacl, c.relkind, c.relnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = c.relowner) AS rolname, c.relchecks, c.relhastriggers, c.relhasindex, c.relhasrules, 'f'::bool AS relhasoids, c.relrowsecurity, c.relforcerowsecurity, c.relfrozenxid, c.relminmxid, tc.oid AS toid, tc.relfrozenxid AS tfrozenxid, tc.relminmxid AS tminmxid, c.relpersistence, c.relispopulated, c.relreplident, c.relpages, am.amname, c.reloftype, d.refobjid AS owning_tab, d.refobjsubid AS owning_col, (SELECT spcname FROM pg_tablespace t WHERE t.oid = c.reltablespace) AS reltablespace, array_remove(array_remove(c.reloptions,'check_option=local'),'check_option=cascaded') AS reloptions, CASE WHEN 'check_option=local' = ANY (c.reloptions) THEN 'LOCAL'::text WHEN 'check_option=cascaded' = ANY (c.reloptions) THEN 'CASCADED'::text ELSE NULL END AS checkoption, tc.reloptions AS toast_reloptions, c.relkind = 'S' AND EXISTS (SELECT 1 FROM pg_depend WHERE classid = 'pg_class'::regclass AND objid = c.oid AND objsubid = 0 AND refclassid = 'pg_class'::regclass AND deptype = 'i') AS is_identity_sequence, EXISTS (SELECT 1 FROM pg_attribute at LEFT JOIN pg_init_privs pip ON (c.oid = pip.objoid AND pip.classoid = 'pg_class'::regclass AND pip.objsubid = at.attnum)WHERE at.attrelid = c.oid AND ((SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(at.attacl,pg_catalog.acldefault('c',c.relowner))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('c',c.relowner))) AS init(init_acl) WHERE acl = init_acl)) as foo) IS NOT NULL OR (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('c',c.relowner))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(at.attacl,pg_catalog.acldefault('c',c.relowner))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) IS NOT NULL OR NULL IS NOT NULL OR NULL IS NOT NULL))AS changed_acl, c.relispartition AS ispartition FROM pg_class c LEFT JOIN pg_depend d ON (c.relkind = 'S' AND d.classid = c.tableoid AND d.objid = c.oid AND d.objsubid = 0 AND d.refclassid = c.tableoid AND d.deptype IN ('a', 'i')) LEFT JOIN pg_class tc ON (c.reltoastrelid = tc.oid AND c.relkind <> 'p') LEFT JOIN pg_am am ON (c.relam = am.oid) LEFT JOIN pg_init_privs pip ON (c.oid = pip.objoid AND pip.classoid = 'pg_class'::regclass AND pip.objsubid = 0) WHERE c.relkind in ('r', 'S', 'v', 'c', 'm', 'f', 'p') ORDER BY c.oid
freecodecamp LOG:  statement: LOCK TABLE public.courses IN ACCESS SHARE MODE
freecodecamp LOG:  statement: LOCK TABLE public.majors IN ACCESS SHARE MODE
freecodecamp LOG:  statement: LOCK TABLE public.majors_courses IN ACCESS SHARE MODE
freecodecamp LOG:  statement: LOCK TABLE public.students IN ACCESS SHARE MODE
freecodecamp LOG:  statement: SELECT p.tableoid, p.oid, p.proname, p.prolang, p.pronargs, p.proargtypes, p.prorettype, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(p.proacl,pg_catalog.acldefault('f',p.proowner))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('f',p.proowner))) AS init(init_acl) WHERE acl = init_acl)) as foo) AS proacl, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('f',p.proowner))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(p.proacl,pg_catalog.acldefault('f',p.proowner))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) AS rproacl, NULL AS initproacl, NULL AS initrproacl, p.pronamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = p.proowner) AS rolname FROM pg_proc p LEFT JOIN pg_init_privs pip ON (p.oid = pip.objoid AND pip.classoid = 'pg_proc'::regclass AND pip.objsubid = 0) WHERE p.prokind <> 'a'
	  AND NOT EXISTS (SELECT 1 FROM pg_depend WHERE classid = 'pg_proc'::regclass AND objid = p.oid AND deptype = 'i')
	  AND (
	  pronamespace != (SELECT oid FROM pg_namespace WHERE nspname = 'pg_catalog')
	  OR EXISTS (SELECT 1 FROM pg_cast
	  WHERE pg_cast.oid > 16383 
	  AND p.oid = pg_cast.castfunc)
	  OR EXISTS (SELECT 1 FROM pg_transform
	  WHERE pg_transform.oid > 16383 AND 
	  (p.oid = pg_transform.trffromsql
	  OR p.oid = pg_transform.trftosql))
	  OR p.proacl IS DISTINCT FROM pip.initprivs)
freecodecamp LOG:  statement: SELECT t.tableoid, t.oid, t.typname, t.typnamespace, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(t.typacl,pg_catalog.acldefault('T',t.typowner))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('T',t.typowner))) AS init(init_acl) WHERE acl = init_acl)) as foo) AS typacl, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('T',t.typowner))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(t.typacl,pg_catalog.acldefault('T',t.typowner))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) AS rtypacl, NULL AS inittypacl, NULL AS initrtypacl, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = t.typowner) AS rolname, t.typelem, t.typrelid, CASE WHEN t.typrelid = 0 THEN ' '::"char" ELSE (SELECT relkind FROM pg_class WHERE oid = t.typrelid) END AS typrelkind, t.typtype, t.typisdefined, t.typname[0] = '_' AND t.typelem != 0 AND (SELECT typarray FROM pg_type te WHERE oid = t.typelem) = t.oid AS isarray FROM pg_type t LEFT JOIN pg_init_privs pip ON (t.oid = pip.objoid AND pip.classoid = 'pg_type'::regclass AND pip.objsubid = 0) 
freecodecamp LOG:  statement: SELECT l.tableoid, l.oid, l.lanname, l.lanpltrusted, l.lanplcallfoid, l.laninline, l.lanvalidator, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(l.lanacl,pg_catalog.acldefault('l',l.lanowner))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('l',l.lanowner))) AS init(init_acl) WHERE acl = init_acl)) as foo) AS lanacl, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('l',l.lanowner))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(l.lanacl,pg_catalog.acldefault('l',l.lanowner))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) AS rlanacl, NULL AS initlanacl, NULL AS initrlanacl, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = l.lanowner) AS lanowner FROM pg_language l LEFT JOIN pg_init_privs pip ON (l.oid = pip.objoid AND pip.classoid = 'pg_language'::regclass AND pip.objsubid = 0) WHERE l.lanispl ORDER BY l.oid
freecodecamp LOG:  statement: SELECT p.tableoid, p.oid, p.proname AS aggname, p.pronamespace AS aggnamespace, p.pronargs, p.proargtypes, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = p.proowner) AS rolname, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(p.proacl,pg_catalog.acldefault('f',p.proowner))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('f',p.proowner))) AS init(init_acl) WHERE acl = init_acl)) as foo) AS aggacl, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('f',p.proowner))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(p.proacl,pg_catalog.acldefault('f',p.proowner))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) AS raggacl, NULL AS initaggacl, NULL AS initraggacl FROM pg_proc p LEFT JOIN pg_init_privs pip ON (p.oid = pip.objoid AND pip.classoid = 'pg_proc'::regclass AND pip.objsubid = 0) WHERE p.prokind = 'a' AND (p.pronamespace != (SELECT oid FROM pg_namespace WHERE nspname = 'pg_catalog') OR p.proacl IS DISTINCT FROM pip.initprivs)
freecodecamp LOG:  statement: SELECT tableoid, oid, oprname, oprnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = oprowner) AS rolname, oprkind, oprcode::oid AS oprcode FROM pg_operator
freecodecamp LOG:  statement: SELECT tableoid, oid, amname, amtype, amhandler::pg_catalog.regproc AS amhandler FROM pg_am
freecodecamp LOG:  statement: SELECT tableoid, oid, opcname, opcnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = opcowner) AS rolname FROM pg_opclass
freecodecamp LOG:  statement: SELECT tableoid, oid, opfname, opfnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = opfowner) AS rolname FROM pg_opfamily
freecodecamp LOG:  statement: SELECT tableoid, oid, prsname, prsnamespace, prsstart::oid, prstoken::oid, prsend::oid, prsheadline::oid, prslextype::oid FROM pg_ts_parser
freecodecamp LOG:  statement: SELECT tableoid, oid, tmplname, tmplnamespace, tmplinit::oid, tmpllexize::oid FROM pg_ts_template
freecodecamp LOG:  statement: SELECT tableoid, oid, dictname, dictnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = dictowner) AS rolname, dicttemplate, dictinitoption FROM pg_ts_dict
freecodecamp LOG:  statement: SELECT tableoid, oid, cfgname, cfgnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = cfgowner) AS rolname, cfgparser FROM pg_ts_config
freecodecamp LOG:  statement: SELECT f.tableoid, f.oid, f.fdwname, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = f.fdwowner) AS rolname, f.fdwhandler::pg_catalog.regproc, f.fdwvalidator::pg_catalog.regproc, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(f.fdwacl,pg_catalog.acldefault('F',f.fdwowner))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('F',f.fdwowner))) AS init(init_acl) WHERE acl = init_acl)) as foo) AS fdwacl, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('F',f.fdwowner))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(f.fdwacl,pg_catalog.acldefault('F',f.fdwowner))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) AS rfdwacl, NULL AS initfdwacl, NULL AS initrfdwacl, array_to_string(ARRAY(SELECT quote_ident(option_name) || ' ' || quote_literal(option_value) FROM pg_options_to_table(f.fdwoptions) ORDER BY option_name), E',
	    ') AS fdwoptions FROM pg_foreign_data_wrapper f LEFT JOIN pg_init_privs pip ON (f.oid = pip.objoid AND pip.classoid = 'pg_foreign_data_wrapper'::regclass AND pip.objsubid = 0) 
freecodecamp LOG:  statement: SELECT f.tableoid, f.oid, f.srvname, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = f.srvowner) AS rolname, f.srvfdw, f.srvtype, f.srvversion, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(f.srvacl,pg_catalog.acldefault('S',f.srvowner))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('S',f.srvowner))) AS init(init_acl) WHERE acl = init_acl)) as foo) AS srvacl, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('S',f.srvowner))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(f.srvacl,pg_catalog.acldefault('S',f.srvowner))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) AS rsrvacl, NULL AS initsrvacl, NULL AS initrsrvacl, array_to_string(ARRAY(SELECT quote_ident(option_name) || ' ' || quote_literal(option_value) FROM pg_options_to_table(f.srvoptions) ORDER BY option_name), E',
	    ') AS srvoptions FROM pg_foreign_server f LEFT JOIN pg_init_privs pip ON (f.oid = pip.objoid AND pip.classoid = 'pg_foreign_server'::regclass AND pip.objsubid = 0) 
freecodecamp LOG:  statement: SELECT d.oid, d.tableoid, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = d.defaclrole) AS defaclrole, d.defaclnamespace, d.defaclobjtype, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(defaclacl,pg_catalog.acldefault(CASE WHEN defaclnamespace = 0 THEN	  CASE WHEN defaclobjtype = 'S' THEN 's'::"char"	  ELSE defaclobjtype END ELSE NULL END,defaclrole))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault(CASE WHEN defaclnamespace = 0 THEN	  CASE WHEN defaclobjtype = 'S' THEN 's'::"char"	  ELSE defaclobjtype END ELSE NULL END,defaclrole))) AS init(init_acl) WHERE acl = init_acl)) as foo) AS defaclacl, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault(CASE WHEN defaclnamespace = 0 THEN	  CASE WHEN defaclobjtype = 'S' THEN 's'::"char"	  ELSE defaclobjtype END ELSE NULL END,defaclrole))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(defaclacl,pg_catalog.acldefault(CASE WHEN defaclnamespace = 0 THEN	  CASE WHEN defaclobjtype = 'S' THEN 's'::"char"	  ELSE defaclobjtype END ELSE NULL END,defaclrole))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) AS rdefaclacl, NULL AS initdefaclacl, NULL AS initrdefaclacl FROM pg_default_acl d LEFT JOIN pg_init_privs pip ON (d.oid = pip.objoid AND pip.classoid = 'pg_default_acl'::regclass AND pip.objsubid = 0) 
freecodecamp LOG:  statement: SELECT tableoid, oid, collname, collnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = collowner) AS rolname FROM pg_collation
freecodecamp LOG:  statement: SELECT tableoid, oid, conname, connamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = conowner) AS rolname FROM pg_conversion
freecodecamp LOG:  statement: SELECT tableoid, oid, castsource, casttarget, castfunc, castcontext, castmethod FROM pg_cast ORDER BY 3,4
freecodecamp LOG:  statement: SELECT tableoid, oid, trftype, trflang, trffromsql::oid, trftosql::oid FROM pg_transform ORDER BY 3,4
freecodecamp LOG:  statement: SELECT inhrelid, inhparent FROM pg_inherits
freecodecamp LOG:  statement: SELECT e.tableoid, e.oid, evtname, evtenabled, evtevent, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = evtowner) AS evtowner, array_to_string(array(select quote_literal(x)  from unnest(evttags) as t(x)), ', ') as evttags, e.evtfoid::regproc as evtfname FROM pg_event_trigger e ORDER BY e.oid
freecodecamp LOG:  statement: SELECT conrelid, confrelid FROM pg_constraint JOIN pg_depend ON (objid = confrelid) WHERE contype = 'f' AND refclassid = 'pg_extension'::regclass AND classid = 'pg_class'::regclass;
freecodecamp LOG:  statement: SELECT
	a.attnum,
	a.attname,
	a.atttypmod,
	a.attstattarget,
	a.attstorage,
	t.typstorage,
	a.attnotnull,
	a.atthasdef,
	a.attisdropped,
	a.attlen,
	a.attalign,
	a.attislocal,
	pg_catalog.format_type(t.oid, a.atttypmod) AS atttypname,
	a.attgenerated,
	CASE WHEN a.atthasmissing AND NOT a.attisdropped THEN a.attmissingval ELSE null END AS attmissingval,
	a.attidentity,
	pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value) FROM pg_catalog.pg_options_to_table(attfdwoptions) ORDER BY option_name), E',
	    ') AS attfdwoptions,
	CASE WHEN a.attcollation <> t.typcollation THEN a.attcollation ELSE 0 END AS attcollation,
	array_to_string(a.attoptions, ', ') AS attoptions
	FROM pg_catalog.pg_attribute a LEFT JOIN pg_catalog.pg_type t ON a.atttypid = t.oid
	WHERE a.attrelid = '16528'::pg_catalog.oid AND a.attnum > 0::pg_catalog.int2
	ORDER BY a.attnum
freecodecamp LOG:  statement: SELECT tableoid, oid, adnum, pg_catalog.pg_get_expr(adbin, adrelid) AS adsrc FROM pg_catalog.pg_attrdef WHERE adrelid = '16528'::pg_catalog.oid
freecodecamp LOG:  statement: SELECT
	a.attnum,
	a.attname,
	a.atttypmod,
	a.attstattarget,
	a.attstorage,
	t.typstorage,
	a.attnotnull,
	a.atthasdef,
	a.attisdropped,
	a.attlen,
	a.attalign,
	a.attislocal,
	pg_catalog.format_type(t.oid, a.atttypmod) AS atttypname,
	a.attgenerated,
	CASE WHEN a.atthasmissing AND NOT a.attisdropped THEN a.attmissingval ELSE null END AS attmissingval,
	a.attidentity,
	pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value) FROM pg_catalog.pg_options_to_table(attfdwoptions) ORDER BY option_name), E',
	    ') AS attfdwoptions,
	CASE WHEN a.attcollation <> t.typcollation THEN a.attcollation ELSE 0 END AS attcollation,
	array_to_string(a.attoptions, ', ') AS attoptions
	FROM pg_catalog.pg_attribute a LEFT JOIN pg_catalog.pg_type t ON a.atttypid = t.oid
	WHERE a.attrelid = '16533'::pg_catalog.oid AND a.attnum > 0::pg_catalog.int2
	ORDER BY a.attnum
freecodecamp LOG:  statement: SELECT tableoid, oid, adnum, pg_catalog.pg_get_expr(adbin, adrelid) AS adsrc FROM pg_catalog.pg_attrdef WHERE adrelid = '16533'::pg_catalog.oid
freecodecamp LOG:  statement: SELECT
	a.attnum,
	a.attname,
	a.atttypmod,
	a.attstattarget,
	a.attstorage,
	t.typstorage,
	a.attnotnull,
	a.atthasdef,
	a.attisdropped,
	a.attlen,
	a.attalign,
	a.attislocal,
	pg_catalog.format_type(t.oid, a.atttypmod) AS atttypname,
	a.attgenerated,
	CASE WHEN a.atthasmissing AND NOT a.attisdropped THEN a.attmissingval ELSE null END AS attmissingval,
	a.attidentity,
	pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value) FROM pg_catalog.pg_options_to_table(attfdwoptions) ORDER BY option_name), E',
	    ') AS attfdwoptions,
	CASE WHEN a.attcollation <> t.typcollation THEN a.attcollation ELSE 0 END AS attcollation,
	array_to_string(a.attoptions, ', ') AS attoptions
	FROM pg_catalog.pg_attribute a LEFT JOIN pg_catalog.pg_type t ON a.atttypid = t.oid
	WHERE a.attrelid = '16536'::pg_catalog.oid AND a.attnum > 0::pg_catalog.int2
	ORDER BY a.attnum
freecodecamp LOG:  statement: SELECT
	a.attnum,
	a.attname,
	a.atttypmod,
	a.attstattarget,
	a.attstorage,
	t.typstorage,
	a.attnotnull,
	a.atthasdef,
	a.attisdropped,
	a.attlen,
	a.attalign,
	a.attislocal,
	pg_catalog.format_type(t.oid, a.atttypmod) AS atttypname,
	a.attgenerated,
	CASE WHEN a.atthasmissing AND NOT a.attisdropped THEN a.attmissingval ELSE null END AS attmissingval,
	a.attidentity,
	pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value) FROM pg_catalog.pg_options_to_table(attfdwoptions) ORDER BY option_name), E',
	    ') AS attfdwoptions,
	CASE WHEN a.attcollation <> t.typcollation THEN a.attcollation ELSE 0 END AS attcollation,
	array_to_string(a.attoptions, ', ') AS attoptions
	FROM pg_catalog.pg_attribute a LEFT JOIN pg_catalog.pg_type t ON a.atttypid = t.oid
	WHERE a.attrelid = '16541'::pg_catalog.oid AND a.attnum > 0::pg_catalog.int2
	ORDER BY a.attnum
freecodecamp LOG:  statement: SELECT tableoid, oid, adnum, pg_catalog.pg_get_expr(adbin, adrelid) AS adsrc FROM pg_catalog.pg_attrdef WHERE adrelid = '16541'::pg_catalog.oid
freecodecamp LOG:  statement: SELECT partrelid FROM pg_partitioned_table WHERE
	(SELECT c.oid FROM pg_opclass c JOIN pg_am a ON c.opcmethod = a.oid
	WHERE opcname = 'enum_ops' AND opcnamespace = 'pg_catalog'::regnamespace AND amname = 'hash') = ANY(partclass)
freecodecamp LOG:  statement: SELECT t.tableoid, t.oid, t.relname AS indexname, inh.inhparent AS parentidx, pg_catalog.pg_get_indexdef(i.indexrelid) AS indexdef, i.indnkeyatts AS indnkeyatts, i.indnatts AS indnatts, i.indkey, i.indisclustered, i.indisreplident, c.contype, c.conname, c.condeferrable, c.condeferred, c.tableoid AS contableoid, c.oid AS conoid, pg_catalog.pg_get_constraintdef(c.oid, false) AS condef, (SELECT spcname FROM pg_catalog.pg_tablespace s WHERE s.oid = t.reltablespace) AS tablespace, t.reloptions AS indreloptions, (SELECT pg_catalog.array_agg(attnum ORDER BY attnum)   FROM pg_catalog.pg_attribute   WHERE attrelid = i.indexrelid AND     attstattarget >= 0) AS indstatcols,(SELECT pg_catalog.array_agg(attstattarget ORDER BY attnum)   FROM pg_catalog.pg_attribute   WHERE attrelid = i.indexrelid AND     attstattarget >= 0) AS indstatvals FROM pg_catalog.pg_index i JOIN pg_catalog.pg_class t ON (t.oid = i.indexrelid) JOIN pg_catalog.pg_class t2 ON (t2.oid = i.indrelid) LEFT JOIN pg_catalog.pg_constraint c ON (i.indrelid = c.conrelid AND i.indexrelid = c.conindid AND c.contype IN ('p','u','x')) LEFT JOIN pg_catalog.pg_inherits inh ON (inh.inhrelid = indexrelid) WHERE i.indrelid = '16528'::pg_catalog.oid AND (i.indisvalid OR t2.relkind = 'p') AND i.indisready ORDER BY indexname
freecodecamp LOG:  statement: SELECT t.tableoid, t.oid, t.relname AS indexname, inh.inhparent AS parentidx, pg_catalog.pg_get_indexdef(i.indexrelid) AS indexdef, i.indnkeyatts AS indnkeyatts, i.indnatts AS indnatts, i.indkey, i.indisclustered, i.indisreplident, c.contype, c.conname, c.condeferrable, c.condeferred, c.tableoid AS contableoid, c.oid AS conoid, pg_catalog.pg_get_constraintdef(c.oid, false) AS condef, (SELECT spcname FROM pg_catalog.pg_tablespace s WHERE s.oid = t.reltablespace) AS tablespace, t.reloptions AS indreloptions, (SELECT pg_catalog.array_agg(attnum ORDER BY attnum)   FROM pg_catalog.pg_attribute   WHERE attrelid = i.indexrelid AND     attstattarget >= 0) AS indstatcols,(SELECT pg_catalog.array_agg(attstattarget ORDER BY attnum)   FROM pg_catalog.pg_attribute   WHERE attrelid = i.indexrelid AND     attstattarget >= 0) AS indstatvals FROM pg_catalog.pg_index i JOIN pg_catalog.pg_class t ON (t.oid = i.indexrelid) JOIN pg_catalog.pg_class t2 ON (t2.oid = i.indrelid) LEFT JOIN pg_catalog.pg_constraint c ON (i.indrelid = c.conrelid AND i.indexrelid = c.conindid AND c.contype IN ('p','u','x')) LEFT JOIN pg_catalog.pg_inherits inh ON (inh.inhrelid = indexrelid) WHERE i.indrelid = '16533'::pg_catalog.oid AND (i.indisvalid OR t2.relkind = 'p') AND i.indisready ORDER BY indexname
freecodecamp LOG:  statement: SELECT t.tableoid, t.oid, t.relname AS indexname, inh.inhparent AS parentidx, pg_catalog.pg_get_indexdef(i.indexrelid) AS indexdef, i.indnkeyatts AS indnkeyatts, i.indnatts AS indnatts, i.indkey, i.indisclustered, i.indisreplident, c.contype, c.conname, c.condeferrable, c.condeferred, c.tableoid AS contableoid, c.oid AS conoid, pg_catalog.pg_get_constraintdef(c.oid, false) AS condef, (SELECT spcname FROM pg_catalog.pg_tablespace s WHERE s.oid = t.reltablespace) AS tablespace, t.reloptions AS indreloptions, (SELECT pg_catalog.array_agg(attnum ORDER BY attnum)   FROM pg_catalog.pg_attribute   WHERE attrelid = i.indexrelid AND     attstattarget >= 0) AS indstatcols,(SELECT pg_catalog.array_agg(attstattarget ORDER BY attnum)   FROM pg_catalog.pg_attribute   WHERE attrelid = i.indexrelid AND     attstattarget >= 0) AS indstatvals FROM pg_catalog.pg_index i JOIN pg_catalog.pg_class t ON (t.oid = i.indexrelid) JOIN pg_catalog.pg_class t2 ON (t2.oid = i.indrelid) LEFT JOIN pg_catalog.pg_constraint c ON (i.indrelid = c.conrelid AND i.indexrelid = c.conindid AND c.contype IN ('p','u','x')) LEFT JOIN pg_catalog.pg_inherits inh ON (inh.inhrelid = indexrelid) WHERE i.indrelid = '16536'::pg_catalog.oid AND (i.indisvalid OR t2.relkind = 'p') AND i.indisready ORDER BY indexname
freecodecamp LOG:  statement: SELECT t.tableoid, t.oid, t.relname AS indexname, inh.inhparent AS parentidx, pg_catalog.pg_get_indexdef(i.indexrelid) AS indexdef, i.indnkeyatts AS indnkeyatts, i.indnatts AS indnatts, i.indkey, i.indisclustered, i.indisreplident, c.contype, c.conname, c.condeferrable, c.condeferred, c.tableoid AS contableoid, c.oid AS conoid, pg_catalog.pg_get_constraintdef(c.oid, false) AS condef, (SELECT spcname FROM pg_catalog.pg_tablespace s WHERE s.oid = t.reltablespace) AS tablespace, t.reloptions AS indreloptions, (SELECT pg_catalog.array_agg(attnum ORDER BY attnum)   FROM pg_catalog.pg_attribute   WHERE attrelid = i.indexrelid AND     attstattarget >= 0) AS indstatcols,(SELECT pg_catalog.array_agg(attstattarget ORDER BY attnum)   FROM pg_catalog.pg_attribute   WHERE attrelid = i.indexrelid AND     attstattarget >= 0) AS indstatvals FROM pg_catalog.pg_index i JOIN pg_catalog.pg_class t ON (t.oid = i.indexrelid) JOIN pg_catalog.pg_class t2 ON (t2.oid = i.indrelid) LEFT JOIN pg_catalog.pg_constraint c ON (i.indrelid = c.conrelid AND i.indexrelid = c.conindid AND c.contype IN ('p','u','x')) LEFT JOIN pg_catalog.pg_inherits inh ON (inh.inhrelid = indexrelid) WHERE i.indrelid = '16541'::pg_catalog.oid AND (i.indisvalid OR t2.relkind = 'p') AND i.indisready ORDER BY indexname
freecodecamp LOG:  statement: SELECT tableoid, oid, stxname, stxnamespace, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = stxowner) AS rolname FROM pg_catalog.pg_statistic_ext
freecodecamp LOG:  statement: SELECT tableoid, oid, conname, confrelid, conindid, pg_catalog.pg_get_constraintdef(oid) AS condef FROM pg_catalog.pg_constraint WHERE conrelid = '16528'::pg_catalog.oid AND conparentid = 0 AND contype = 'f'
freecodecamp LOG:  statement: SELECT tableoid, oid, conname, confrelid, conindid, pg_catalog.pg_get_constraintdef(oid) AS condef FROM pg_catalog.pg_constraint WHERE conrelid = '16533'::pg_catalog.oid AND conparentid = 0 AND contype = 'f'
freecodecamp LOG:  statement: SELECT tableoid, oid, conname, confrelid, conindid, pg_catalog.pg_get_constraintdef(oid) AS condef FROM pg_catalog.pg_constraint WHERE conrelid = '16536'::pg_catalog.oid AND conparentid = 0 AND contype = 'f'
freecodecamp LOG:  statement: SELECT tableoid, oid, conname, confrelid, conindid, pg_catalog.pg_get_constraintdef(oid) AS condef FROM pg_catalog.pg_constraint WHERE conrelid = '16541'::pg_catalog.oid AND conparentid = 0 AND contype = 'f'
freecodecamp LOG:  statement: SELECT t.tgname, t.tgfoid::pg_catalog.regproc AS tgfname, pg_catalog.pg_get_triggerdef(t.oid, false) AS tgdef, t.tgenabled, t.tableoid, t.oid, t.tgisinternal FROM pg_catalog.pg_trigger t LEFT JOIN pg_catalog.pg_depend AS d ON  d.classid = 'pg_catalog.pg_trigger'::pg_catalog.regclass AND  d.refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass AND  d.objid = t.oid LEFT JOIN pg_catalog.pg_trigger AS pt ON pt.oid = refobjid WHERE t.tgrelid = '16528'::pg_catalog.oid AND (NOT t.tgisinternal)
freecodecamp LOG:  statement: SELECT t.tgname, t.tgfoid::pg_catalog.regproc AS tgfname, pg_catalog.pg_get_triggerdef(t.oid, false) AS tgdef, t.tgenabled, t.tableoid, t.oid, t.tgisinternal FROM pg_catalog.pg_trigger t LEFT JOIN pg_catalog.pg_depend AS d ON  d.classid = 'pg_catalog.pg_trigger'::pg_catalog.regclass AND  d.refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass AND  d.objid = t.oid LEFT JOIN pg_catalog.pg_trigger AS pt ON pt.oid = refobjid WHERE t.tgrelid = '16533'::pg_catalog.oid AND (NOT t.tgisinternal)
freecodecamp LOG:  statement: SELECT t.tgname, t.tgfoid::pg_catalog.regproc AS tgfname, pg_catalog.pg_get_triggerdef(t.oid, false) AS tgdef, t.tgenabled, t.tableoid, t.oid, t.tgisinternal FROM pg_catalog.pg_trigger t LEFT JOIN pg_catalog.pg_depend AS d ON  d.classid = 'pg_catalog.pg_trigger'::pg_catalog.regclass AND  d.refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass AND  d.objid = t.oid LEFT JOIN pg_catalog.pg_trigger AS pt ON pt.oid = refobjid WHERE t.tgrelid = '16536'::pg_catalog.oid AND (NOT t.tgisinternal)
freecodecamp LOG:  statement: SELECT t.tgname, t.tgfoid::pg_catalog.regproc AS tgfname, pg_catalog.pg_get_triggerdef(t.oid, false) AS tgdef, t.tgenabled, t.tableoid, t.oid, t.tgisinternal FROM pg_catalog.pg_trigger t LEFT JOIN pg_catalog.pg_depend AS d ON  d.classid = 'pg_catalog.pg_trigger'::pg_catalog.regclass AND  d.refclassid = 'pg_catalog.pg_trigger'::pg_catalog.regclass AND  d.objid = t.oid LEFT JOIN pg_catalog.pg_trigger AS pt ON pt.oid = refobjid WHERE t.tgrelid = '16541'::pg_catalog.oid AND (NOT t.tgisinternal)
freecodecamp LOG:  statement: SELECT tableoid, oid, rulename, ev_class AS ruletable, ev_type, is_instead, ev_enabled FROM pg_rewrite ORDER BY oid
freecodecamp LOG:  statement: SELECT pol.oid, pol.tableoid, pol.polrelid, pol.polname, pol.polcmd, pol.polpermissive, CASE WHEN pol.polroles = '{0}' THEN NULL ELSE    pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(rolname) from pg_catalog.pg_roles WHERE oid = ANY(pol.polroles)), ', ') END AS polroles, pg_catalog.pg_get_expr(pol.polqual, pol.polrelid) AS polqual, pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid) AS polwithcheck FROM unnest('{16528,16533,16536,16541}'::pg_catalog.oid[]) AS src(tbloid)
	JOIN pg_catalog.pg_policy pol ON (src.tbloid = pol.polrelid)
freecodecamp LOG:  statement: SELECT p.tableoid, p.oid, p.pubname, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = p.pubowner) AS rolname, p.puballtables, p.pubinsert, p.pubupdate, p.pubdelete, p.pubtruncate FROM pg_publication p
freecodecamp LOG:  statement: SELECT tableoid, oid, prpubid, prrelid FROM pg_catalog.pg_publication_rel
freecodecamp LOG:  statement: SELECT count(*) FROM pg_subscription WHERE subdbid = (SELECT oid FROM pg_database                 WHERE datname = current_database())
freecodecamp LOG:  statement: WITH RECURSIVE w AS ( SELECT d1.objid, d2.refobjid, c2.relkind AS refrelkind FROM pg_depend d1 JOIN pg_class c1 ON c1.oid = d1.objid AND c1.relkind = 'm' JOIN pg_rewrite r1 ON r1.ev_class = d1.objid JOIN pg_depend d2 ON d2.classid = 'pg_rewrite'::regclass AND d2.objid = r1.oid AND d2.refobjid <> d1.objid JOIN pg_class c2 ON c2.oid = d2.refobjid AND c2.relkind IN ('m','v') WHERE d1.classid = 'pg_class'::regclass UNION SELECT w.objid, d3.refobjid, c3.relkind FROM w JOIN pg_rewrite r3 ON r3.ev_class = w.refobjid JOIN pg_depend d3 ON d3.classid = 'pg_rewrite'::regclass AND d3.objid = r3.oid AND d3.refobjid <> w.refobjid JOIN pg_class c3 ON c3.oid = d3.refobjid AND c3.relkind IN ('m','v') ) SELECT 'pg_class'::regclass::oid AS classid, objid, refobjid FROM w WHERE refrelkind = 'm'
freecodecamp LOG:  statement: SELECT l.oid, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = l.lomowner) AS rolname, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(l.lomacl,pg_catalog.acldefault('L',l.lomowner))) WITH ORDINALITY AS perm(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('L',l.lomowner))) AS init(init_acl) WHERE acl = init_acl)) as foo) AS lomacl, (SELECT pg_catalog.array_agg(acl ORDER BY row_n) FROM (SELECT acl, row_n FROM pg_catalog.unnest(coalesce(pip.initprivs,pg_catalog.acldefault('L',l.lomowner))) WITH ORDINALITY AS initp(acl,row_n) WHERE NOT EXISTS ( SELECT 1 FROM pg_catalog.unnest(coalesce(l.lomacl,pg_catalog.acldefault('L',l.lomowner))) AS permp(orig_acl) WHERE acl = orig_acl)) as foo) AS rlomacl, NULL AS initlomacl, NULL AS initrlomacl FROM pg_largeobject_metadata l LEFT JOIN pg_init_privs pip ON (l.oid = pip.objoid AND pip.classoid = 'pg_largeobject'::regclass AND pip.objsubid = 0) 
freecodecamp LOG:  statement: SELECT classid, objid, refclassid, refobjid, deptype FROM pg_depend WHERE deptype != 'p' AND deptype != 'e'
	UNION ALL
	SELECT 'pg_opfamily'::regclass AS classid, amopfamily AS objid, refclassid, refobjid, deptype FROM pg_depend d, pg_amop o WHERE deptype NOT IN ('p', 'e', 'i') AND classid = 'pg_amop'::regclass AND objid = o.oid AND NOT (refclassid = 'pg_opfamily'::regclass AND amopfamily = refobjid)
	UNION ALL
	SELECT 'pg_opfamily'::regclass AS classid, amprocfamily AS objid, refclassid, refobjid, deptype FROM pg_depend d, pg_amproc p WHERE deptype NOT IN ('p', 'e', 'i') AND classid = 'pg_amproc'::regclass AND objid = p.oid AND NOT (refclassid = 'pg_opfamily'::regclass AND amprocfamily = refobjid)
	ORDER BY 1,2
freecodecamp LOG:  statement: SELECT pg_catalog.current_schemas(false)
freecodecamp LOG:  statement: SELECT tableoid, oid, datname, (SELECT rolname FROM pg_catalog.pg_roles WHERE oid = datdba) AS dba, pg_encoding_to_char(encoding) AS encoding, datcollate, datctype, datfrozenxid, datminmxid, (SELECT array_agg(acl ORDER BY row_n) FROM   (SELECT acl, row_n FROM      unnest(coalesce(datacl,acldefault('d',datdba)))      WITH ORDINALITY AS perm(acl,row_n)    WHERE NOT EXISTS (      SELECT 1      FROM unnest(acldefault('d',datdba))        AS init(init_acl)      WHERE acl = init_acl)) AS datacls)  AS datacl, (SELECT array_agg(acl ORDER BY row_n) FROM   (SELECT acl, row_n FROM      unnest(acldefault('d',datdba))      WITH ORDINALITY AS initp(acl,row_n)    WHERE NOT EXISTS (      SELECT 1      FROM unnest(coalesce(datacl,acldefault('d',datdba)))        AS permp(orig_acl)      WHERE acl = orig_acl)) AS rdatacls)  AS rdatacl, datistemplate, datconnlimit, (SELECT spcname FROM pg_tablespace t WHERE t.oid = dattablespace) AS tablespace, shobj_description(oid, 'pg_database') AS description FROM pg_database WHERE datname = current_database()
freecodecamp LOG:  statement: SELECT provider, label FROM pg_catalog.pg_shseclabel WHERE classoid = 'pg_catalog.pg_database'::pg_catalog.regclass AND objoid = '16527'
freecodecamp LOG:  statement: SELECT setconfig[1] FROM pg_db_role_setting WHERE setrole = 0 AND setdatabase = '16527'::oid
freecodecamp LOG:  statement: SELECT rolname, unnest(setconfig) FROM pg_db_role_setting s, pg_roles r WHERE setrole = r.oid AND setdatabase = '16527'::oid
freecodecamp LOG:  statement: SELECT description, classoid, objoid, objsubid FROM pg_catalog.pg_description ORDER BY classoid, objoid, objsubid
freecodecamp LOG:  statement: SELECT label, provider, classoid, objoid, objsubid FROM pg_catalog.pg_seclabel ORDER BY classoid, objoid, objsubid
freecodecamp LOG:  statement: SELECT format_type(seqtypid, NULL), seqstart, seqincrement, seqmax, seqmin, seqcache, seqcycle FROM pg_catalog.pg_sequence WHERE seqrelid = '16531'::oid
freecodecamp LOG:  statement: SELECT format_type(seqtypid, NULL), seqstart, seqincrement, seqmax, seqmin, seqcache, seqcycle FROM pg_catalog.pg_sequence WHERE seqrelid = '16539'::oid
freecodecamp LOG:  statement: SELECT format_type(seqtypid, NULL), seqstart, seqincrement, seqmax, seqmin, seqcache, seqcycle FROM pg_catalog.pg_sequence WHERE seqrelid = '16544'::oid
freecodecamp LOG:  statement: SELECT last_value, is_called FROM public.courses_course_id_seq
freecodecamp LOG:  statement: SELECT last_value, is_called FROM public.majors_major_id_seq
freecodecamp LOG:  statement: SELECT last_value, is_called FROM public.students_student_id_seq
freecodecamp LOG:  statement: DECLARE _pg_dump_cursor CURSOR FOR SELECT course_id, course FROM ONLY public.courses
freecodecamp LOG:  statement: FETCH 100 FROM _pg_dump_cursor
freecodecamp LOG:  statement: FETCH 100 FROM _pg_dump_cursor
freecodecamp LOG:  statement: CLOSE _pg_dump_cursor
freecodecamp LOG:  statement: DECLARE _pg_dump_cursor CURSOR FOR SELECT major_id, major FROM ONLY public.majors
freecodecamp LOG:  statement: FETCH 100 FROM _pg_dump_cursor
freecodecamp LOG:  statement: FETCH 100 FROM _pg_dump_cursor
freecodecamp LOG:  statement: CLOSE _pg_dump_cursor
freecodecamp LOG:  statement: DECLARE _pg_dump_cursor CURSOR FOR SELECT major_id, course_id FROM ONLY public.majors_courses
freecodecamp LOG:  statement: FETCH 100 FROM _pg_dump_cursor
freecodecamp LOG:  statement: FETCH 100 FROM _pg_dump_cursor
freecodecamp LOG:  statement: CLOSE _pg_dump_cursor
freecodecamp LOG:  statement: DECLARE _pg_dump_cursor CURSOR FOR SELECT student_id, first_name, last_name, major_id, gpa FROM ONLY public.students
freecodecamp LOG:  statement: FETCH 100 FROM _pg_dump_cursor
freecodecamp LOG:  statement: FETCH 100 FROM _pg_dump_cursor
freecodecamp LOG:  statement: CLOSE _pg_dump_cursor
[unknown] LOG:  connection received: host=::1 port=40826
[unknown] LOG:  invalid length of startup packet
[unknown] LOG:  connection received: host=::1 port=49072
[unknown] LOG:  invalid length of startup packet
freecodecamp LOG:  statement: select * from majors_courses;
freecodecamp LOG:  statement: select * from majors;
freecodecamp FATAL:  terminating connection due to administrator command
 LOG:  received smart shutdown request
 LOG:  background worker "logical replication launcher" (PID 43244) exited with exit code 1
 LOG:  shutting down
 LOG:  database system is shut down
